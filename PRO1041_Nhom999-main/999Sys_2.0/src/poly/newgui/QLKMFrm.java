/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package poly.newgui;

import java.awt.CardLayout;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import poly.dao.DanhMucDao;
import poly.dao.KhuyenMaiDAO;
import poly.dao.SanPhamDao;
import poly.entity.DanhMuc;
import poly.entity.KhuyenMai;
import poly.entity.SanPham;
import poly.helper.CustomDatePicker;
import poly.helper.Messeger;
import poly.helper.XDate;
import poly.helper.XInternal;
import poly.helper.XValidate;

/**
 *
 * @author NTV
 */
public class QLKMFrm extends javax.swing.JInternalFrame {

    KhuyenMaiDAO kmDao;
    DanhMucDao dmDao;
    SanPhamDao spDao;
    DefaultTableModel model_tbl;
    DefaultTableModel model_tbl_HetHan;
    DefaultTableModel model_tbl_HoaDon;
    DefaultTableModel model_tbl_HoaDonHetHan;
    DefaultComboBoxModel<SanPham> modelcbb_sp;
    DefaultComboBoxModel<DanhMuc> modelcbb_dm;
    CardLayout card_radio;
    CardLayout card_tbl;
    CardLayout card_tbl_hoadon;
    CardLayout card_GiaTri;
    DefaultComboBoxModel<SanPham> model_sp;
    DefaultComboBoxModel<DanhMuc> model_dm;
    NewMainFrm mainFrm;

    /**
     * Creates new form QLKMFrm
     */
    public QLKMFrm(JFrame jFrame) {
        initComponents();
        mainFrm = (NewMainFrm) jFrame;
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel21 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        btnThungRac = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtKhuyenMai = new javax.swing.JTextField();
        txtTenKhuyenMai = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ctCard = new javax.swing.JPanel();
        vndCard = new javax.swing.JPanel();
        txtGiaTri = new javax.swing.JSpinner();
        percentCard = new javax.swing.JPanel();
        sppercent = new javax.swing.JSpinner();
        txtGiamToiDa = new javax.swing.JSpinner();
        jPanel16 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        radVND = new javax.swing.JPanel();
        radiovnd = new javax.swing.JRadioButton();
        radioPT = new javax.swing.JRadioButton();
        jPanel26 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        customCard = new javax.swing.JPanel();
        spCard = new javax.swing.JPanel();
        jpnloaiGG = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        radioSanPham = new javax.swing.JRadioButton();
        radioDanhMuc = new javax.swing.JRadioButton();
        jpnCardgoc = new javax.swing.JPanel();
        jpnDM = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        cbbDanhMuc = new javax.swing.JComboBox<>();
        jpnSP = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cbbSP = new javax.swing.JComboBox<>();
        hdCard = new javax.swing.JPanel();
        jlbhdtt = new javax.swing.JLabel();
        txthdtoithieu = new javax.swing.JSpinner();
        jPanel5 = new javax.swing.JPanel();
        jlbadkm = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        radio_AD_SanPham = new javax.swing.JRadioButton();
        radio_AD_HoaDon = new javax.swing.JRadioButton();
        jPanel27 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jlbtenbang = new javax.swing.JLabel();
        jpncardGoctbl = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblhethang = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblqlkm = new javax.swing.JTable();
        cardgocHoaDon = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_HoaDon = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_HoaDon_HetHan = new javax.swing.JTable();

        setBackground(new java.awt.Color(51, 255, 255));

        jPanel21.setBackground(new java.awt.Color(102, 255, 255));
        jPanel21.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 0, 0, 0, new java.awt.Color(102, 255, 255)));
        jPanel21.setMinimumSize(new java.awt.Dimension(274, 49));
        jPanel21.setPreferredSize(new java.awt.Dimension(2360, 35));
        jPanel21.setLayout(new java.awt.GridLayout(1, 0));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("QUẢN LÝ KHUYẾN MẠI");
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jPanel21.add(jLabel11);

        getContentPane().add(jPanel21, java.awt.BorderLayout.PAGE_START);

        jPanel18.setBackground(new java.awt.Color(0, 255, 255));
        jPanel18.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel3.setBackground(new java.awt.Color(255, 153, 51));
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(10, 10, 10, 10, new java.awt.Color(0, 255, 255)));
        jPanel3.setPreferredSize(new java.awt.Dimension(120, 86));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel28.setBackground(new java.awt.Color(255, 153, 51));
        jPanel28.setBorder(javax.swing.BorderFactory.createMatteBorder(10, 3, 3, 3, new java.awt.Color(255, 153, 51)));
        jPanel28.setLayout(new java.awt.GridLayout(5, 1, 10, 10));

        btnThungRac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/icons/DCD.png"))); // NOI18N
        btnThungRac.setText("Hết Hạn");
        btnThungRac.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThungRac.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnThungRac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThungRacActionPerformed(evt);
            }
        });
        jPanel28.add(btnThungRac);

        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/icons/new.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMoi.setPreferredSize(new java.awt.Dimension(85, 65));
        btnMoi.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        jPanel28.add(btnMoi);

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/icons/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThem.setPreferredSize(new java.awt.Dimension(85, 65));
        btnThem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel28.add(btnThem);

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/icons/update.png"))); // NOI18N
        btnSua.setText("Cập Nhật");
        btnSua.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSua.setPreferredSize(new java.awt.Dimension(85, 65));
        btnSua.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel28.add(btnSua);

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/icons/delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnXoa.setPreferredSize(new java.awt.Dimension(85, 65));
        btnXoa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel28.add(btnXoa);

        jPanel3.add(jPanel28, java.awt.BorderLayout.NORTH);

        jPanel18.add(jPanel3, java.awt.BorderLayout.EAST);

        jPanel19.setBackground(new java.awt.Color(0, 255, 255));
        jPanel19.setBorder(javax.swing.BorderFactory.createMatteBorder(10, 15, 10, 0, new java.awt.Color(0, 255, 255)));
        jPanel19.setLayout(new java.awt.BorderLayout(15, 5));

        jPanel1.setBackground(new java.awt.Color(255, 153, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(10, 10, 10, 10, new java.awt.Color(255, 153, 51)));
        jPanel1.setLayout(new java.awt.BorderLayout(15, 5));

        jPanel2.setBackground(new java.awt.Color(255, 153, 51));
        jPanel2.setLayout(new java.awt.BorderLayout(15, 5));

        jPanel11.setBackground(new java.awt.Color(255, 153, 51));
        jPanel11.setLayout(new java.awt.GridLayout(0, 3, 15, 5));

        jLabel1.setText("Mã Khuyến Mãi");
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel11.add(jLabel1);

        jLabel6.setText("Tên Khuyến Mãi");
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel11.add(jLabel6);

        jLabel3.setText("Ngày Bắt Đầu");
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel11.add(jLabel3);

        txtKhuyenMai.setEditable(false);
        txtKhuyenMai.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel11.add(txtKhuyenMai);

        txtTenKhuyenMai.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel11.add(txtTenKhuyenMai);

        jLabel2.setText("Giá Trị");
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel11.add(jLabel2);

        jLabel5.setText("Giảm Tối Đa");
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel11.add(jLabel5);

        jLabel4.setText("Ngày Kết Thúc");
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel11.add(jLabel4);

        ctCard.setLayout(new java.awt.CardLayout());

        vndCard.setLayout(new java.awt.GridLayout(1, 0));

        txtGiaTri.setModel(new javax.swing.SpinnerNumberModel(10000, 10000, null, 1000));
        txtGiaTri.setEditor(new javax.swing.JSpinner.NumberEditor(txtGiaTri, "###,###,### VNĐ"));
        vndCard.add(txtGiaTri);

        ctCard.add(vndCard, "vndCard");

        percentCard.setLayout(new java.awt.GridLayout(1, 0));

        sppercent.setModel(new javax.swing.SpinnerNumberModel(0.2d, 0.0d, 1.0d, 0.05d));
        sppercent.setEditor(new javax.swing.JSpinner.NumberEditor(sppercent, "##%"));
        percentCard.add(sppercent);

        ctCard.add(percentCard, "percentCard");

        jPanel11.add(ctCard);

        txtGiamToiDa.setModel(new javax.swing.SpinnerNumberModel(10000, 10000, null, 1000));
        txtGiamToiDa.setEditor(new javax.swing.JSpinner.NumberEditor(txtGiamToiDa, "###,###,### VNĐ"));
        jPanel11.add(txtGiamToiDa);

        jPanel2.add(jPanel11, java.awt.BorderLayout.NORTH);

        jPanel16.setBackground(new java.awt.Color(255, 153, 51));
        jPanel16.setBorder(javax.swing.BorderFactory.createMatteBorder(30, 1, 1, 1, new java.awt.Color(255, 153, 51)));
        jPanel16.setLayout(new java.awt.GridLayout(2, 3, 15, 5));

        jPanel12.setBackground(new java.awt.Color(255, 153, 51));
        jPanel12.setLayout(new java.awt.BorderLayout(15, 5));

        jPanel13.setBackground(new java.awt.Color(255, 153, 51));
        jPanel13.setLayout(new java.awt.BorderLayout(15, 5));

        jLabel8.setText("Hình Thức Áp Dụng");
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jPanel13.add(jLabel8, java.awt.BorderLayout.NORTH);

        radVND.setBackground(new java.awt.Color(255, 153, 51));
        radVND.setPreferredSize(new java.awt.Dimension(236, 25));
        radVND.setLayout(new java.awt.GridLayout(1, 0, 15, 5));

        buttonGroup3.add(radiovnd);
        radiovnd.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        radiovnd.setSelected(true);
        radiovnd.setText("VND");
        radiovnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiovndActionPerformed(evt);
            }
        });
        radVND.add(radiovnd);

        buttonGroup3.add(radioPT);
        radioPT.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        radioPT.setText("%");
        radioPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioPTActionPerformed(evt);
            }
        });
        radVND.add(radioPT);

        jPanel26.setBackground(new java.awt.Color(255, 153, 51));

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );

        radVND.add(jPanel26);

        jPanel25.setBackground(new java.awt.Color(255, 153, 51));

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );

        radVND.add(jPanel25);

        jPanel24.setBackground(new java.awt.Color(255, 153, 51));

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );

        radVND.add(jPanel24);

        jPanel13.add(radVND, java.awt.BorderLayout.CENTER);

        jPanel12.add(jPanel13, java.awt.BorderLayout.CENTER);

        jPanel16.add(jPanel12);

        customCard.setBackground(new java.awt.Color(255, 153, 51));
        customCard.setLayout(new java.awt.CardLayout(15, 5));

        spCard.setBackground(new java.awt.Color(255, 153, 51));
        spCard.setLayout(new java.awt.GridLayout(1, 0, 15, 5));

        jpnloaiGG.setBackground(new java.awt.Color(255, 153, 51));
        jpnloaiGG.setLayout(new java.awt.BorderLayout(15, 5));

        jLabel9.setText("Loại Giảm Giá");
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jpnloaiGG.add(jLabel9, java.awt.BorderLayout.NORTH);

        jPanel14.setBackground(new java.awt.Color(255, 153, 51));
        jPanel14.setLayout(new java.awt.BorderLayout(15, 5));

        jPanel22.setBackground(new java.awt.Color(255, 153, 51));
        jPanel22.setLayout(new java.awt.GridLayout(1, 0, 15, 5));

        buttonGroup2.add(radioSanPham);
        radioSanPham.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        radioSanPham.setSelected(true);
        radioSanPham.setText("Sản Phẩm");
        radioSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSanPhamActionPerformed(evt);
            }
        });
        jPanel22.add(radioSanPham);

        buttonGroup2.add(radioDanhMuc);
        radioDanhMuc.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        radioDanhMuc.setText("Danh Mục");
        radioDanhMuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDanhMucActionPerformed(evt);
            }
        });
        jPanel22.add(radioDanhMuc);

        jPanel14.add(jPanel22, java.awt.BorderLayout.CENTER);

        jpnloaiGG.add(jPanel14, java.awt.BorderLayout.CENTER);

        spCard.add(jpnloaiGG);

        jpnCardgoc.setBackground(new java.awt.Color(255, 153, 51));
        jpnCardgoc.setLayout(new java.awt.CardLayout(15, 5));

        jpnDM.setBackground(new java.awt.Color(255, 153, 51));
        jpnDM.setLayout(new java.awt.BorderLayout(15, 5));

        jLabel10.setText("Mã Danh Mục");
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jpnDM.add(jLabel10, java.awt.BorderLayout.NORTH);

        cbbDanhMuc.setPreferredSize(new java.awt.Dimension(36, 33));
        jpnDM.add(cbbDanhMuc, java.awt.BorderLayout.CENTER);

        jpnCardgoc.add(jpnDM, "cardDM");

        jpnSP.setBackground(new java.awt.Color(255, 153, 51));
        jpnSP.setPreferredSize(new java.awt.Dimension(204, 21));
        jpnSP.setLayout(new java.awt.BorderLayout(0, 10));

        jLabel7.setText("Mã Sản Phẩm");
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jpnSP.add(jLabel7, java.awt.BorderLayout.NORTH);

        cbbSP.setPreferredSize(new java.awt.Dimension(36, 36));
        jpnSP.add(cbbSP, java.awt.BorderLayout.SOUTH);

        jpnCardgoc.add(jpnSP, "cardSP");

        spCard.add(jpnCardgoc);

        customCard.add(spCard, "spCard");

        hdCard.setBackground(new java.awt.Color(255, 153, 51));
        hdCard.setLayout(new java.awt.BorderLayout(15, 5));

        jlbhdtt.setText("Tối Thiểu");
        jlbhdtt.setBackground(new java.awt.Color(204, 204, 204));
        jlbhdtt.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        hdCard.add(jlbhdtt, java.awt.BorderLayout.PAGE_START);

        txthdtoithieu.setModel(new javax.swing.SpinnerNumberModel(0, null, null, 1000));
        txthdtoithieu.setEditor(new javax.swing.JSpinner.NumberEditor(txthdtoithieu, "###,###,### VNĐ"));
        hdCard.add(txthdtoithieu, java.awt.BorderLayout.CENTER);

        customCard.add(hdCard, "hdCard");

        jPanel16.add(customCard);

        jPanel5.setBackground(new java.awt.Color(255, 153, 51));
        jPanel5.setLayout(new java.awt.BorderLayout(15, 5));

        jlbadkm.setText("Áp Dụng Giảm Giá");
        jlbadkm.setBackground(new java.awt.Color(204, 204, 204));
        jlbadkm.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jPanel5.add(jlbadkm, java.awt.BorderLayout.NORTH);

        jPanel15.setBackground(new java.awt.Color(255, 153, 51));
        jPanel15.setLayout(new java.awt.BorderLayout(15, 5));

        jPanel20.setBackground(new java.awt.Color(255, 153, 51));
        jPanel20.setPreferredSize(new java.awt.Dimension(51, 33));
        jPanel20.setLayout(new java.awt.GridLayout(1, 0, 15, 5));

        buttonGroup1.add(radio_AD_SanPham);
        radio_AD_SanPham.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        radio_AD_SanPham.setSelected(true);
        radio_AD_SanPham.setText("Sản Phẩm");
        radio_AD_SanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_AD_SanPhamActionPerformed(evt);
            }
        });
        jPanel20.add(radio_AD_SanPham);

        buttonGroup1.add(radio_AD_HoaDon);
        radio_AD_HoaDon.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        radio_AD_HoaDon.setText("Hóa Đơn");
        radio_AD_HoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_AD_HoaDonActionPerformed(evt);
            }
        });
        jPanel20.add(radio_AD_HoaDon);

        jPanel27.setBackground(new java.awt.Color(255, 153, 51));

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );

        jPanel20.add(jPanel27);

        jPanel23.setBackground(new java.awt.Color(255, 153, 51));

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );

        jPanel20.add(jPanel23);

        jPanel10.setBackground(new java.awt.Color(255, 153, 51));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );

        jPanel20.add(jPanel10);

        jPanel15.add(jPanel20, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel15, java.awt.BorderLayout.CENTER);

        jPanel16.add(jPanel5);

        jPanel2.add(jPanel16, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel19.add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel17.setBackground(new java.awt.Color(255, 153, 51));
        jPanel17.setBorder(javax.swing.BorderFactory.createMatteBorder(10, 1, 1, 1, new java.awt.Color(255, 153, 51)));
        jPanel17.setLayout(new java.awt.GridLayout(2, 0, 15, 5));

        jPanel9.setBackground(new java.awt.Color(255, 153, 51));
        jPanel9.setLayout(new java.awt.BorderLayout(15, 5));

        jlbtenbang.setText("jLabel11");
        jlbtenbang.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 10, 0, 0, new java.awt.Color(255, 153, 51)));
        jlbtenbang.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        jPanel9.add(jlbtenbang, java.awt.BorderLayout.NORTH);

        jpncardGoctbl.setBackground(new java.awt.Color(255, 153, 51));
        jpncardGoctbl.setLayout(new java.awt.CardLayout(15, 5));

        jPanel6.setBackground(new java.awt.Color(255, 153, 51));
        jPanel6.setLayout(new java.awt.BorderLayout(15, 5));

        tblhethang.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        tblhethang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã KM", "Tên KM", "Giá Trị", "Giảm Tối Đa", "Ngày BD", "Ngày KT", "Mã SP"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblhethang.setRowHeight(24);
        tblhethang.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblhethang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblhethangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblhethang);

        jPanel6.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jpncardGoctbl.add(jPanel6, "cardhethan");

        jPanel4.setBackground(new java.awt.Color(255, 153, 51));
        jPanel4.setLayout(new java.awt.BorderLayout(15, 5));

        jScrollPane1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        tblqlkm.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        tblqlkm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã KM", "Tên KM", "Giá Trị", "Giảm Tối Đa", "Ngày BD", "Ngày KT", "Mã SP"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblqlkm.setRowHeight(24);
        tblqlkm.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblqlkm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblqlkmMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblqlkm);

        jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jpncardGoctbl.add(jPanel4, "cardKM");

        jPanel9.add(jpncardGoctbl, java.awt.BorderLayout.CENTER);

        jPanel17.add(jPanel9);

        cardgocHoaDon.setBackground(new java.awt.Color(255, 153, 51));
        cardgocHoaDon.setLayout(new java.awt.CardLayout());

        jPanel7.setBackground(new java.awt.Color(255, 153, 51));
        jPanel7.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 15, 0, 15, new java.awt.Color(255, 153, 51)));
        jPanel7.setLayout(new java.awt.BorderLayout(15, 5));

        tbl_HoaDon.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        tbl_HoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã KM", "Tên KM", "Giá Trị", "Giảm Tối Đa", "Ngày BD", "Ngày KT", "HDTT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_HoaDon.setRowHeight(24);
        tbl_HoaDon.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbl_HoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_HoaDonMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbl_HoaDon);

        jPanel7.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        cardgocHoaDon.add(jPanel7, "card_goc");

        jPanel8.setBackground(new java.awt.Color(255, 153, 51));
        jPanel8.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 15, 0, 15, new java.awt.Color(255, 153, 51)));
        jPanel8.setLayout(new java.awt.BorderLayout(15, 5));

        jScrollPane5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        tbl_HoaDon_HetHan.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        tbl_HoaDon_HetHan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã KM", "Tên KM", "Giá Trị", "Giảm Tối Đa", "Ngày BD", "Ngày KT", "HDTT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_HoaDon_HetHan.setRowHeight(24);
        tbl_HoaDon_HetHan.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbl_HoaDon_HetHan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_HoaDon_HetHanMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tbl_HoaDon_HetHan);

        jPanel8.add(jScrollPane5, java.awt.BorderLayout.CENTER);

        cardgocHoaDon.add(jPanel8, "card_phu");

        jPanel17.add(cardgocHoaDon);

        jPanel19.add(jPanel17, java.awt.BorderLayout.CENTER);

        jPanel18.add(jPanel19, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel18, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThungRacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThungRacActionPerformed
        if (btnThungRac.getText().equalsIgnoreCase("Hết Hạn")) {
            card_tbl.show(jpncardGoctbl, "cardhethan");
            card_tbl_hoadon.show(cardgocHoaDon, "card_phu");
            btnThungRac.setText("Khuyễn Mãi");
            jlbtenbang.setText("Bảng : Danh Sách Khuyến Mại Hết Hạn");
            ResetForm();
            setNut(false);
            LoadDataToTable_hethan();
        } else {
            jlbtenbang.setText("Bảng : Danh Sách Khuyến Mại");
            card_tbl.show(jpncardGoctbl, "cardKM");
            card_tbl_hoadon.show(cardgocHoaDon, "card_goc");
            btnThungRac.setText("Hết Hạn");
            setNut(true);
        }
    }//GEN-LAST:event_btnThungRacActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        ResetForm();
        String ngaybd = XDate.toString(XDate.toDate(txtNgayBatDau.getText(), "dd/MM/yyyy"), "MM-dd-yyyy");
        String ngaykt = XDate.toString(XDate.toDate(txtNgayKetThuc.getText(), "dd/MM/yyyy"), "MM-dd-yyyy");
        KhuyenMai km = new KhuyenMai();
            double giamToiDa = Double.parseDouble(String.valueOf(txtGiamToiDa.getValue()));
            double hdToiThieu = Double.parseDouble(String.valueOf(txthdtoithieu.getValue()));
            km.setGiamToiDa(giamToiDa);
            double giaTri = radiovnd.isSelected() ? Double.parseDouble(String.valueOf(txtGiaTri.getValue())) : Double.parseDouble(String.valueOf(sppercent.getValue())) * 100;
            km.setGiaTri(giaTri);
            km.setHDToiThieu(hdToiThieu);
            km.setTenKM(txtTenKhuyenMai.getText());
            km.setNgayBD(ngaybd);
            km.setNgayKT(ngaykt);
            km.setHinhThucAD(true);
            km.setLoaiKM(true);
            try {
                if (!Messeger.confirm(this, "Bạn Có Muốn Thêm Không")) {
                    return;
                }
                kmDao.Insert_NoMaSp(km);
                LoadDataToTable_KM_HoaDon();
                return;
            } catch (Exception ex) {
                ex.printStackTrace();
                Messeger.showErrorDialog(null, ex.getMessage(), "Error");
            }
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (Validate_QLKhuyenMai()) {
            return;
        }
        boolean hinhthucAD = true;
        boolean LoaiApDung = true;
        String ngaybd = XDate.toString(XDate.toDate(txtNgayBatDau.getText(), "dd/MM/yyyy"), "MM-dd-yyyy");
        String ngaykt = XDate.toString(XDate.toDate(txtNgayKetThuc.getText(), "dd/MM/yyyy"), "MM-dd-yyyy");
        if (radioPT.isSelected()) {
            hinhthucAD = false;
        }

        if (radio_AD_HoaDon.isSelected()) {
            double giaTri = radiovnd.isSelected() ? Double.parseDouble(String.valueOf(txtGiaTri.getValue())) : Double.parseDouble(String.valueOf(sppercent.getValue())) * 100;
            double giamToiDa = Double.parseDouble(String.valueOf(txtGiamToiDa.getValue()));
            double hdToiThieu = Double.parseDouble(String.valueOf(txthdtoithieu.getValue()));
            LoaiApDung = false;
            KhuyenMai km = new KhuyenMai();
            km.setMaKM(Integer.parseInt(txtKhuyenMai.getText()));
            km.setGiamToiDa(giamToiDa);
            km.setGiaTri(giaTri);
            km.setHDToiThieu(hdToiThieu);
            km.setTenKM(txtTenKhuyenMai.getText());
            km.setNgayBD(ngaybd);
            km.setNgayKT(ngaykt);
            km.setHinhThucAD(hinhthucAD);
            try {
                if (!Messeger.confirm(this, "Bạn Có Muốn Sửa Không")) {
                    return;
                }
                kmDao.Update_NoMaSP(km);
                LoadDataToTable_KM_HoaDon();
                return;
            } catch (Exception ex) {
                ex.printStackTrace();
                Messeger.showErrorDialog(null, ex.getMessage(), "Error");
            }
        }

        try {
            if (!Messeger.confirm(this, "Bạn Có Muốn Sửa Không")) {
                return;
            }
            double giaTri = radiovnd.isSelected() ? Double.parseDouble(String.valueOf(txtGiaTri.getValue())) : Double.parseDouble(String.valueOf(sppercent.getValue())) * 100;
            double giamToiDa = Double.parseDouble(String.valueOf(txtGiamToiDa.getValue()));
            kmDao.update(new KhuyenMai(
                    Integer.parseInt(txtKhuyenMai.getText()),
                    Integer.parseInt(cbbSP.getSelectedItem().toString()),
                    giamToiDa,
                    giaTri,
                    txtTenKhuyenMai.getText(),
                    ngaybd,
                    ngaykt,
                    hinhthucAD,
                    true,
                    true));
            LoadDataToTable_KM();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        boolean hinhthucAD = true;
        if (radioPT.isSelected()) {
            hinhthucAD = false;
        }

        try {
            if (!Messeger.confirm(this, "Bạn Có Muốn Xóa Không")) {
                return;
            }
            kmDao.delete(txtKhuyenMai.getText());
            LoadDataToTable_KM();
            LoadDataToTable_KM_HoaDon();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (Validate_QLKhuyenMai()) {
            return;
        }
        if (!Validate_Day()) {
            Messeger.alert(this, "Ngày Kết Thúc Phải Lớn Hơn Ngày Bắt Đầu");
            return;
        }
        if (txtNgayBatDau.getText().equals(txtNgayKetThuc.getText())) {
            Messeger.alert(this, "Ngày Kết Thúc Phải Lớn Hơn Ngày Bắt Đầu");
            return;
        }
       
        ArrayList<String> s = SanPhamDao.ListSp_NoKhuyenMai(false);
        for (int i = 0; i < s.size(); i++) {
            String get = s.get(i);
            if (cbbSP.getSelectedItem().toString().equals(get)) {
                Messeger.alert(this, "Sản Phẩm này Không Hỗ Trợ Giảm Giá");
                return;
            }
        }

        boolean hinhthucAD = true;
        boolean LoaiApDung = true;
        if (radioPT.isSelected()) {
            hinhthucAD = false;
        }

        if (radio_AD_HoaDon.isSelected()) {
            LoaiApDung = false;
        }
        String ngaybd = XDate.toString(XDate.toDate(txtNgayBatDau.getText(), "dd/MM/yyyy"), "MM-dd-yyyy");
        String ngaykt = XDate.toString(XDate.toDate(txtNgayKetThuc.getText(), "dd/MM/yyyy"), "MM-dd-yyyy");

        if (radioDanhMuc.isSelected() && radio_AD_SanPham.isSelected()) {
            DanhMuc dm = (DanhMuc) cbbDanhMuc.getSelectedItem();
            ArrayList<String> listSPInDanhMuc = KhuyenMaiDAO.getMaSP_InDanhMuc(dm.getMaDM());
            if (!Messeger.confirm(this, "Bạn Có Muốn Thêm Không")) {
                return;
            }
            for (int i = 0; i < listSPInDanhMuc.size(); i++) {
                String get = listSPInDanhMuc.get(i);
                try {
                    double giaTri = radiovnd.isSelected() ? Double.parseDouble(String.valueOf(txtGiaTri.getValue())) : Double.parseDouble(String.valueOf(sppercent.getValue())) * 100;
                    double giamToiDa = Double.parseDouble(String.valueOf(txtGiamToiDa.getValue()));
                   if (kmDao.insert(new KhuyenMai(
                        Integer.parseInt(cbbSP.getSelectedItem().toString()),
                        giamToiDa,
                        giaTri,
                        txtTenKhuyenMai.getText(),
                        ngaybd,
                        ngaykt,
                        hinhthucAD,
                        LoaiApDung))) {
                    Messeger.alert(null, "Thành Công b");
                }else{
                    Messeger.alert(null, "null/cmd");
                }
                    LoadDataToTable_KM();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
            return;
        }
        if (radioSanPham.isSelected() && radio_AD_SanPham.isSelected()) {
            if (!CheckKhongChungMaSP()) {
                return;
            }
            try {
                if (!Messeger.confirm(this, "Bạn Có Muốn Thêm Không")) {
                    return;
                }
                double giaTri = radiovnd.isSelected() ? Double.parseDouble(String.valueOf(txtGiaTri.getValue())) : Double.parseDouble(String.valueOf(sppercent.getValue())) * 100;
                double giamToiDa = Double.parseDouble(String.valueOf(txtGiamToiDa.getValue()));
               if (kmDao.insert(new KhuyenMai(
                        Integer.parseInt(cbbSP.getSelectedItem().toString()),
                        giamToiDa,
                        giaTri,
                        txtTenKhuyenMai.getText(),
                        ngaybd,
                        ngaykt,
                        hinhthucAD,
                        LoaiApDung))) {
                    Messeger.alert(null, "Thành Côngx");
                }else{
                    Messeger.alert(null, "tb2");
                }
                LoadDataToTable_KM();
                ResetForm();
                return;
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }

        if (radio_AD_HoaDon.isSelected()) {
            KhuyenMai km = new KhuyenMai();
            double giamToiDa = Double.parseDouble(String.valueOf(txtGiamToiDa.getValue()));
            double hdToiThieu = Double.parseDouble(String.valueOf(txthdtoithieu.getValue()));
            km.setGiamToiDa(giamToiDa);
            double giaTri = radiovnd.isSelected() ? Double.parseDouble(String.valueOf(txtGiaTri.getValue())) : Double.parseDouble(String.valueOf(sppercent.getValue())) * 100;
            km.setGiaTri(giaTri);
            km.setHDToiThieu(hdToiThieu);
            km.setTenKM(txtTenKhuyenMai.getText());
            km.setNgayBD(ngaybd);
            km.setNgayKT(ngaykt);
            km.setHinhThucAD(hinhthucAD);
            km.setLoaiKM(LoaiApDung);
            try {
                if (!Messeger.confirm(this, "Bạn Có Muốn Thêm Không")) {
                    return;
                }
                if (kmDao.Insert_NoMaSp(km)) {
                    Messeger.alert(null, "tc");
                    LoadDataToTable_KM_HoaDon();
                }else{
                    Messeger.alert(null, "tb");
                }
                return;
            } catch (Exception ex) {
                ex.printStackTrace();
                Messeger.showErrorDialog(null, ex.getMessage(), "Error");
            }
        }

//        try {
//            if (!Messeger.confirm(this, "Bạn Có Muốn Thêm Không")) {
//                return;
//            }
//            double giamToiDa = Double.parseDouble(String.valueOf(txtGiamToiDa.getValue()));
//            double giaTri = radiovnd.isSelected() ? Double.parseDouble(String.valueOf(txtGiaTri.getValue())) : Double.parseDouble(String.valueOf(sppercent.getValue())) * 100;
//            kmDao.insert(new KhuyenMai(
//                    Integer.parseInt(cbbSP.getSelectedItem().toString()),
//                    giamToiDa,
//                    giaTri,
//                    txtTenKhuyenMai.getText(),
//                    ngaybd,
//                    ngaykt,
//                    hinhthucAD,
//                    LoaiApDung));
//            LoadDataToTable_KM();
//            ResetForm();
//        } catch (Exception ex) {
//            ex.printStackTrace();
//        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void radioSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSanPhamActionPerformed
        if (radioSanPham.isSelected()) {
            card_radio.show(jpnCardgoc, "cardSP");
        }
    }//GEN-LAST:event_radioSanPhamActionPerformed

    private void radioDanhMucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDanhMucActionPerformed
        if (radioDanhMuc.isSelected()) {
            card_radio.show(jpnCardgoc, "cardDM");
        }
    }//GEN-LAST:event_radioDanhMucActionPerformed

    private void radio_AD_SanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_AD_SanPhamActionPerformed
        setGiaTriHDTT(false);
        jpnCardgoc.setVisible(true);
        jpnloaiGG.setVisible(true);
    }//GEN-LAST:event_radio_AD_SanPhamActionPerformed

    private void radio_AD_HoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_AD_HoaDonActionPerformed

        setGiaTriHDTT(true);
        jpnCardgoc.setVisible(false);
        jpnloaiGG.setVisible(false);
    }//GEN-LAST:event_radio_AD_HoaDonActionPerformed

    private void tblhethangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblhethangMouseClicked
        int viTri = tblhethang.getSelectedRow();
        if (viTri < 0) {
            return;
        }
        txtKhuyenMai.setText(String.valueOf(tblhethang.getValueAt(viTri, 0)));
        txtTenKhuyenMai.setText(String.valueOf(tblhethang.getValueAt(viTri, 1)));
        if (String.valueOf(tblhethang.getValueAt(viTri, 2)).length() > 3) {
            txtGiaTri.setValue(Double.parseDouble(String.valueOf(tblhethang.getValueAt(viTri, 2)).replace("đ", "")));
            showCardGiaTri(true);
        } else {
            sppercent.setValue(Double.parseDouble(String.valueOf(tblhethang.getValueAt(viTri, 2)).replace("%", "")) * 0.01);
            showCardGiaTri(false);
        }
        txtGiamToiDa.setValue(Double.parseDouble(String.valueOf(tblhethang.getValueAt(viTri, 3)).replace("đ", "")));
        txtNgayBatDau.setText(String.valueOf(tblhethang.getValueAt(viTri, 4)));
        txtNgayKetThuc.setText(String.valueOf(tblhethang.getValueAt(viTri, 5)));
        model_sp.setSelectedItem(String.valueOf(String.valueOf(tblhethang.getValueAt(viTri, 6))));
        txtKhuyenMai.setText("");
        radio_AD_SanPham.setSelected(true);
    }//GEN-LAST:event_tblhethangMouseClicked

    private void tblqlkmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblqlkmMouseClicked
        int viTri = tblqlkm.getSelectedRow();
        if (viTri < 0) {
            return;
        }

        radio_AD_SanPham.setSelected(true);
        txthdtoithieu.setValue(0);
        setGiaTriHDTT(false);
        setText(viTri);
        if (tblqlkm.getValueAt(viTri, 2).toString().trim().length() > 3) {
            radiovnd.setSelected(true);
        } else {
            radioPT.setSelected(true);
        }
    }//GEN-LAST:event_tblqlkmMouseClicked

    private void tbl_HoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_HoaDonMouseClicked
        int viTri = tbl_HoaDon.getSelectedRow();
        if (viTri == -1) {
            return;
        }
        setGiaTriHDTT(true);
        radio_AD_HoaDon.setSelected(true);
        txtKhuyenMai.setText(String.valueOf(tbl_HoaDon.getValueAt(viTri, 0)));
        txtTenKhuyenMai.setText(String.valueOf(tbl_HoaDon.getValueAt(viTri, 1)));
        if (String.valueOf(tbl_HoaDon.getValueAt(viTri, 2)).length() > 3) {
            txtGiaTri.setValue(Double.parseDouble(String.valueOf(tbl_HoaDon.getValueAt(viTri, 2)).replace("đ", "")));
            showCardGiaTri(true);
        } else {
            sppercent.setValue(Double.parseDouble(String.valueOf(tbl_HoaDon.getValueAt(viTri, 2)).replace("%", "")) * 0.01);
            showCardGiaTri(false);
        }
        txtGiamToiDa.setValue(Double.parseDouble(String.valueOf(tbl_HoaDon.getValueAt(viTri, 3))));
        txtNgayBatDau.setText(String.valueOf(tbl_HoaDon.getValueAt(viTri, 4)));
        txtNgayKetThuc.setText(String.valueOf(tbl_HoaDon.getValueAt(viTri, 5)));

        txthdtoithieu.setValue(Double.parseDouble(String.valueOf(tbl_HoaDon.getValueAt(viTri, 6)).replace("đ", "")));
        radio_AD_HoaDon.setSelected(true);
    }//GEN-LAST:event_tbl_HoaDonMouseClicked

    private void tbl_HoaDon_HetHanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_HoaDon_HetHanMouseClicked
        int viTri = tbl_HoaDon_HetHan.getSelectedRow();
        if (viTri == -1) {
            return;
        }
        setGiaTriHDTT(true);
        radio_AD_HoaDon.setSelected(true);
        txtKhuyenMai.setText(String.valueOf(tbl_HoaDon_HetHan.getValueAt(viTri, 0)));
        txtTenKhuyenMai.setText(String.valueOf(tbl_HoaDon_HetHan.getValueAt(viTri, 1)));
        if (String.valueOf(tbl_HoaDon_HetHan.getValueAt(viTri, 2)).length() > 3) {
            txtGiaTri.setValue(Double.parseDouble(String.valueOf(tbl_HoaDon_HetHan.getValueAt(viTri, 2)).replace("đ", "")));
            showCardGiaTri(true);
        } else {
            sppercent.setValue(Double.parseDouble(String.valueOf(tbl_HoaDon_HetHan.getValueAt(viTri, 2)).replace("%", "")) * 0.01);
            showCardGiaTri(false);
        }
        txtGiamToiDa.setValue(Double.parseDouble(String.valueOf(tbl_HoaDon_HetHan.getValueAt(viTri, 3))));
        txtNgayBatDau.setText(String.valueOf(tbl_HoaDon_HetHan.getValueAt(viTri, 4)));
        txtNgayKetThuc.setText(String.valueOf(tbl_HoaDon_HetHan.getValueAt(viTri, 5)));

        txthdtoithieu.setValue(Double.parseDouble(String.valueOf(tbl_HoaDon_HetHan.getValueAt(viTri, 6)).replace("đ", "")));
        radio_AD_HoaDon.setSelected(true);
    }//GEN-LAST:event_tbl_HoaDon_HetHanMouseClicked

    private void radioPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioPTActionPerformed
        // TODO add your handling code here:
        vndCard.setVisible(false);
        percentCard.setVisible(true);
    }//GEN-LAST:event_radioPTActionPerformed

    private void radiovndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiovndActionPerformed
        // TODO add your handling code here:
        percentCard.setVisible(false);
        vndCard.setVisible(true);
    }//GEN-LAST:event_radiovndActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThungRac;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JPanel cardgocHoaDon;
    private javax.swing.JComboBox<String> cbbDanhMuc;
    private javax.swing.JComboBox<String> cbbSP;
    private javax.swing.JPanel ctCard;
    private javax.swing.JPanel customCard;
    private javax.swing.JPanel hdCard;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel jlbadkm;
    private javax.swing.JLabel jlbhdtt;
    private javax.swing.JLabel jlbtenbang;
    private javax.swing.JPanel jpnCardgoc;
    private javax.swing.JPanel jpnDM;
    private javax.swing.JPanel jpnSP;
    private javax.swing.JPanel jpncardGoctbl;
    private javax.swing.JPanel jpnloaiGG;
    private javax.swing.JPanel percentCard;
    private javax.swing.JPanel radVND;
    private javax.swing.JRadioButton radioDanhMuc;
    private javax.swing.JRadioButton radioPT;
    private javax.swing.JRadioButton radioSanPham;
    private javax.swing.JRadioButton radio_AD_HoaDon;
    private javax.swing.JRadioButton radio_AD_SanPham;
    private javax.swing.JRadioButton radiovnd;
    private javax.swing.JPanel spCard;
    private javax.swing.JSpinner sppercent;
    private javax.swing.JTable tbl_HoaDon;
    private javax.swing.JTable tbl_HoaDon_HetHan;
    private javax.swing.JTable tblhethang;
    private javax.swing.JTable tblqlkm;
    private javax.swing.JSpinner txtGiaTri;
    private javax.swing.JSpinner txtGiamToiDa;
    private javax.swing.JTextField txtKhuyenMai;
    private javax.swing.JTextField txtTenKhuyenMai;
    private javax.swing.JSpinner txthdtoithieu;
    private javax.swing.JPanel vndCard;
    // End of variables declaration//GEN-END:variables

    private void init() {
        XInternal.uncorated(this);
        setGiaTriHDTT(false);
        ResetForm();
        kmDao = new KhuyenMaiDAO();
        spDao = new SanPhamDao();
        dmDao = new DanhMucDao();
        model_tbl = (DefaultTableModel) tblqlkm.getModel();
        model_tbl_HetHan = (DefaultTableModel) tblhethang.getModel();
        model_tbl_HoaDon = (DefaultTableModel) tbl_HoaDon.getModel();
        model_tbl_HoaDonHetHan = (DefaultTableModel) tbl_HoaDon_HetHan.getModel();
        model_sp = (DefaultComboBoxModel) cbbSP.getModel();
        model_dm = (DefaultComboBoxModel) cbbDanhMuc.getModel();
        modelcbb_dm = (DefaultComboBoxModel) cbbDanhMuc.getModel();
        modelcbb_sp = (DefaultComboBoxModel) cbbSP.getModel();
        card_radio = (CardLayout) jpnCardgoc.getLayout();
        card_tbl = (CardLayout) jpncardGoctbl.getLayout();
        card_tbl_hoadon = (CardLayout) cardgocHoaDon.getLayout();
        card_GiaTri = (CardLayout) ctCard.getLayout();
        card_radio.show(jpnCardgoc, "cardSP");
        card_tbl.show(jpncardGoctbl, "cardKM");
        card_tbl_hoadon.show(cardgocHoaDon, "card_goc");
        jlbtenbang.setText("Bảng : Danh Sách Khuyến Mại");
        LoadDataToCBBSP();
        LoadDataToCBBDM();
        LoadDataToTable_KM();
        LoadDataToTable_KM_HoaDon();
        txtKhuyenMai.setEnabled(false);
        txtNgayBatDau.setSettings(CustomDatePicker.customsDatePicker(txtNgayBatDau, new javax.swing.ImageIcon(getClass().getResource("/poly/icons/calendar.png"))));
        txtNgayKetThuc.setSettings(CustomDatePicker.customsDatePicker(txtNgayKetThuc, new javax.swing.ImageIcon(getClass().getResource("/poly/icons/calendar.png"))));

    }

    private boolean CheckKhongChungMaSP() {
        SanPham sp = (SanPham) modelcbb_sp.getSelectedItem();
        for (int i = 0; i < tblqlkm.getRowCount(); i++) {
            String textTable = String.valueOf(tblqlkm.getValueAt(i, 6));
            String textCbb = String.valueOf(sp.getMaSP());
            if (textTable.equals(textCbb)) {
                Messeger.alert(this, "Đã Có Mã Giảm Giá Cho Sản Phẩm");
                return false;
            }
        }
        return true;
    }

    private void LoadDataToTable_KM() {
        model_tbl.setRowCount(0);
        try {
            ArrayList<KhuyenMai> list_km = kmDao.selectAll();
            for (int i = 0; i < list_km.size(); i++) {
                KhuyenMai get = list_km.get(i);
                String ngaybd = XDate.toString(XDate.toDate(get.getNgayBD(), "yyyy-MM-dd"), "dd/MM/yyyy");
                String ngaykt = XDate.toString(XDate.toDate(get.getNgayKT(), "yyyy-MM-dd"), "dd/MM/yyyy");
                if (get.isTrangThai() & get.isLoaiKM()) {
                    String Giatri = new DecimalFormat("0.####").format(get.getGiaTri());
                    if (Giatri.trim().length() <= 3) {
                        Giatri = Giatri + "%";
                    } else {
                        Giatri = Giatri + "đ";
                    }
                    String giamgiatoida = new DecimalFormat("0.####").format(get.getGiamToiDa()) + "đ";
                    String LoaiKM = "Hóa Đơn";
                    if (get.isLoaiKM()) {
                        LoaiKM = "Sản Phẩm";
                    }
                    Object[] rowData = new Object[]{
                        get.getMaKM(),
                        get.getTenKM(),
                        Giatri,
                        giamgiatoida,
                        ngaybd,
                        ngaykt,
                        get.getMaSP(),
                        LoaiKM
                    };
                    model_tbl.addRow(rowData);
                }

            }
            Auto_HetHan_KhuyenMai();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    private void LoadDataToTable_hethan() {
        model_tbl_HetHan.setRowCount(0);
        try {
            ArrayList<KhuyenMai> list_km = kmDao.selectAll();
            for (int i = 0; i < list_km.size(); i++) {
                KhuyenMai get = list_km.get(i);
                String ngaybd = XDate.toString(XDate.toDate(get.getNgayBD(), "yyyy-MM-dd"), "dd/MM/yyyy");
                String ngaykt = XDate.toString(XDate.toDate(get.getNgayKT(), "yyyy-MM-dd"), "dd/MM/yyyy");
                if (!get.isTrangThai() & get.isLoaiKM()) {
                    String Giatri = new DecimalFormat("0.####").format(get.getGiaTri());
                    if (Giatri.trim().length() <= 3) {
                        Giatri = Giatri + "%";
                    } else {
                        Giatri = Giatri + "đ";
                    }
                    String giamgiatoida = new DecimalFormat("0.####").format(get.getGiamToiDa()) + "đ";
                    String LoaiKM = "Hóa Đơn";
                    if (get.isLoaiKM()) {
                        LoaiKM = "Sản Phẩm";
                    }
                    Object[] rowData = new Object[]{
                        get.getMaKM(),
                        get.getTenKM(),
                        Giatri,
                        giamgiatoida,
                        ngaybd,
                        ngaykt,
                        get.getMaSP(),
                        LoaiKM
                    };
                    model_tbl_HetHan.addRow(rowData);
                }

            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    private void LoadDataToCBBSP() {
        model_sp.removeAllElements();
        try {
            ArrayList<SanPham> list_sp = spDao.selectAll();
            for (int i = 0; i < list_sp.size(); i++) {
                SanPham get = list_sp.get(i);
                modelcbb_sp.addElement(get);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            Messeger.showErrorDialog(null, ex.getMessage(), "Error");
        }
    }

    private void LoadDataToCBBDM() {
        model_dm.removeAllElements();
        try {
            ArrayList<DanhMuc> list_dm = dmDao.selectAll();
            for (int i = 0; i < list_dm.size(); i++) {
                DanhMuc get = list_dm.get(i);
                modelcbb_dm.addElement(get);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void Auto_HetHan_KhuyenMai() {
        for (int i = 0; i < tblqlkm.getRowCount(); i++) {
            try {
                String ngaykt = XDate.toString(XDate.toDate(
                        String.valueOf(tblqlkm.getValueAt(i, 5)), "dd/MM/yyyy"), "yyyy-MM-dd");
                Date date1 = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                Date date2 = sdf.parse(ngaykt);
                String relation;
                if (date1.before(date2)) // Hoặc  else if (date1.after(date2)== false)
                {
                    relation = "Trước";
                } else {
                    relation = "Sau";
                }
                if (relation.equals("Sau")) {
                    try {
                        kmDao.delete(String.valueOf(tblqlkm.getValueAt(i, 0)));
                        LoadDataToTable_KM();
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
            } catch (ParseException ex) {
                ex.printStackTrace();
                Messeger.showErrorDialog(null, ex.getMessage(), "Error");
            }
        }
    }

    private boolean Validate_QLKhuyenMai() {
        StringBuilder x = new StringBuilder();
        if (XValidate.isEmpty(txtTenKhuyenMai)) {
            x.append("Không Để Trống Tên Khuyến Mại\n");
        }
        if (x.toString().length() > 0) {
            Messeger.alert(this, x.toString());
            return true;
        }

        return false;
    }

    private void LoadDataToTable_KM_HoaDon() {
        model_tbl_HoaDon.setRowCount(0);
        try {
            ArrayList<KhuyenMai> list_km = kmDao.selectAll();
            for (int i = 0; i < list_km.size(); i++) {
                KhuyenMai get = list_km.get(i);
                String ngaybd = XDate.toString(XDate.toDate(get.getNgayBD(), "yyyy-MM-dd"), "dd/MM/yyyy");
                String ngaykt = XDate.toString(XDate.toDate(get.getNgayKT(), "yyyy-MM-dd"), "dd/MM/yyyy");
                if (get.isTrangThai() & !get.isLoaiKM()) {
                    String Giatri = String.format("%.0f", get.getGiaTri());
                    if (Giatri.trim().length() <= 3) {
                        Giatri = Giatri + "%";
                    } else {
                        Giatri = Giatri + "đ";
                    }

                    String GiatriHDTT = String.format("%.0f", get.getHDToiThieu()) + "đ";
                    Object[] rowData = new Object[]{
                        get.getMaKM(),
                        get.getTenKM(),
                        Giatri,
                        get.getGiamToiDa(),
                        ngaybd,
                        ngaykt,
                        GiatriHDTT
                    };
                    model_tbl_HoaDon.addRow(rowData);
                }

            }
            LoadDataToTable_KM_HoaDonHetHan();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    private void LoadDataToTable_KM_HoaDonHetHan() {
        model_tbl_HoaDonHetHan.setRowCount(0);
        try {
            ArrayList<KhuyenMai> list_km = kmDao.selectAll();
            for (int i = 0; i < list_km.size(); i++) {
                KhuyenMai get = list_km.get(i);
                String ngaybd = XDate.toString(XDate.toDate(get.getNgayBD(), "yyyy-MM-dd"), "dd/MM/yyyy");
                String ngaykt = XDate.toString(XDate.toDate(get.getNgayKT(), "yyyy-MM-dd"), "dd/MM/yyyy");
                if (!get.isTrangThai() & !get.isLoaiKM()) {
                    String Giatri = String.format("%.0f", get.getGiaTri());
                    if (Giatri.trim().length() <= 3) {
                        Giatri = Giatri + "%";
                    } else {
                        Giatri = Giatri + "đ";
                    }

                    String GiatriHDTT = String.format("%.0f", get.getHDToiThieu()) + "đ";
                    Object[] rowData = new Object[]{
                        get.getMaKM(),
                        get.getTenKM(),
                        Giatri,
                        get.getGiamToiDa(),
                        ngaybd,
                        ngaykt,
                        GiatriHDTT
                    };
                    model_tbl_HoaDonHetHan.addRow(rowData);
                }

            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    private boolean Validate_Day() {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            Date date1 = sdf.parse(txtNgayBatDau.getText());
            Date date2 = sdf.parse(txtNgayKetThuc.getText());
            if (date1.after(date2)) {
                return false;
            }
        } catch (ParseException ex) {
            ex.printStackTrace();
            Messeger.showErrorDialog(null, ex.getMessage(), "Error");
        }
        return true;
    }

    private void setNut(boolean boo) {
        btnMoi.setVisible(boo);
        btnSua.setVisible(boo);
        btnThem.setVisible(boo);
        btnXoa.setVisible(boo);

    }

    private void setGiaTriHDTT(boolean boo) {
        hdCard.setVisible(boo);
        spCard.setVisible(!boo);
    }

    private void setText(int viTri) {
        txtKhuyenMai.setText(String.valueOf(tblqlkm.getValueAt(viTri, 0)));
        txtTenKhuyenMai.setText(String.valueOf(tblqlkm.getValueAt(viTri, 1)));
        if (String.valueOf(tblqlkm.getValueAt(viTri, 2)).length() > 3) {
            txtGiaTri.setValue(Double.parseDouble(String.valueOf(tblqlkm.getValueAt(viTri, 2)).replace("đ", "")));
            showCardGiaTri(true);
        } else {
            sppercent.setValue(Double.parseDouble(String.valueOf(tblqlkm.getValueAt(viTri, 2)).replace("%", "")) * 0.01);
            showCardGiaTri(false);
        }
        txtGiamToiDa.setValue(Double.parseDouble(String.valueOf(tblqlkm.getValueAt(viTri, 3)).replace("đ", "")));
        txtNgayBatDau.setText(String.valueOf(tblqlkm.getValueAt(viTri, 4)));
        txtNgayKetThuc.setText(String.valueOf(tblqlkm.getValueAt(viTri, 5)));
        model_sp.setSelectedItem(String.valueOf(String.valueOf(tblqlkm.getValueAt(viTri, 6))));

    }

    private void ResetForm() {
        txtKhuyenMai.setText("");
        txtTenKhuyenMai.setText("");
        txtGiaTri.setValue(10000);
        txtGiamToiDa.setValue(10000);
        txtNgayBatDau.setDateToToday();
        txtNgayKetThuc.setDateToToday();
        vndCard.setVisible(true);
        radiovnd.setSelected(true);
        percentCard.setVisible(false);
        jpnCardgoc.setVisible(true);
        jpnloaiGG.setVisible(true);
        radio_AD_SanPham.setSelected(true);
        hdCard.setVisible(false);
        spCard.setVisible(true);
    }

    private void showCardGiaTri(boolean b) {
        if (b) {
            card_GiaTri.show(ctCard, "vndCard");
            radiovnd.setSelected(true);
        } else {
            card_GiaTri.show(ctCard, "percentCard");
            radioPT.setSelected(true);
        }
    }
}
