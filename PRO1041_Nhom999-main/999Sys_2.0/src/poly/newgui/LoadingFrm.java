/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package poly.newgui;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import poly.dao.CTHoaDonDao;
import poly.dao.HoaDonDao;
import poly.dao.KhachHangDao;
import poly.dao.SanPhamDao;
import poly.entity.HoaDon;

/**
 *
 * @author XUÂN THÀNH
 */
public class LoadingFrm extends javax.swing.JDialog implements Runnable {

    private HoaDonDao daoHD;
    private KhachHangDao daoKH;
    private SanPhamDao daoSP;
    private CTHoaDonDao daoCTHD;
    JTabbedPane pnlTabs;
    Thread t;
    NewMainFrm parent;
    /**
     * Creates new form loading
     */
    public LoadingFrm(JFrame parent, boolean modal, JTabbedPane pnlTabs) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

        this.parent = (NewMainFrm) parent;
        
        this.daoHD = new HoaDonDao();
        this.daoKH = new KhachHangDao();
        this.daoSP = new SanPhamDao();
        this.daoCTHD = new CTHoaDonDao();

        this.pnlTabs = pnlTabs;

        t = new Thread(this);
        t.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pgbLoad = new javax.swing.JProgressBar();
        jPanel2 = new javax.swing.JPanel();
        lblText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setLayout(new java.awt.BorderLayout());

        pgbLoad.setBackground(new java.awt.Color(255, 255, 255));
        pgbLoad.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        pgbLoad.setStringPainted(true);
        jPanel1.add(pgbLoad, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setPreferredSize(new java.awt.Dimension(200, 100));
        jPanel2.setLayout(new java.awt.BorderLayout());

        lblText.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblText.setForeground(new java.awt.Color(255, 255, 255));
        lblText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(lblText, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        t.stop();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(LoadingFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(LoadingFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(LoadingFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(LoadingFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                LoadingFrm dialog = new LoadingFrm(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblText;
    private javax.swing.JProgressBar pgbLoad;
    // End of variables declaration//GEN-END:variables

    public JPanel getjPanel1() {
        return jPanel1;
    }

    public void setjPanel1(JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    @Override
    public void run() {
        lblText.setText("Đang Kết Nối Tới Cơ Sở Dữ Liệu ....");
        List<HoaDon> list = new ArrayList<>();
        try {
            list = LoadingFrm.this.daoHD.selectAll();
            pgbLoad.setMaximum(list.size() - 1);
            
            boolean a = true;
            for (HoaDon h : list) {
                if (h.getMaTT() == 1) {
                    lblText.setText("Đang tải hóa đơn chờ ....");
                    BanHangFrm.k = daoKH.selectById(h.getMaKH());
                    BanHangFrm.listCTHD = daoCTHD.selectCTHD(h.getMaHD());
                    HoaDonFrm hdpnl = new HoaDonFrm(parent,LoadingFrm.this.pnlTabs);
                    LoadingFrm.this.pnlTabs.addTab(BanHangFrm.k == null ? "Khách lẻ: " : BanHangFrm.k.getHoTen(), hdpnl);
                    LoadingFrm.this.pnlTabs.setSelectedComponent(hdpnl);
                    hdpnl.loadDataToHoaDon();
                    hdpnl.setLabelHoaDon(h);
                    a = false;
                }
                pgbLoad.setValue(pgbLoad.getValue() + 1);
                if (pgbLoad.getValue() >= pgbLoad.getMaximum()){
                    lblText.setText("Đã xong....");
                } 
                if (pgbLoad.getValue() >= pgbLoad.getMaximum()) {
                    LoadingFrm.this.dispose();
                }
                
                
                if (pgbLoad.getValue() == 1){
                    lblText.setText("Đang tải dữ liệu ....");
                }
                
                Thread.sleep(10);

            }
            if (a) {
                HoaDonFrm hdpnl = new HoaDonFrm(parent,LoadingFrm.this.pnlTabs);
                LoadingFrm.this.pnlTabs.addTab("Khách lẻ ", hdpnl);
                LoadingFrm.this.pnlTabs.setSelectedComponent(hdpnl);
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

}
