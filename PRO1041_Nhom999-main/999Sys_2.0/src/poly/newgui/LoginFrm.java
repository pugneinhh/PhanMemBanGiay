/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package poly.newgui;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import poly.dao.NhanVienDao;
import poly.entity.NhanVien;
import poly.helper.Auth;
import poly.helper.Messeger;
import poly.helper.ResetPassByEmail;
import poly.helper.XValidate;
import poly.myinterface.BaseDaoInterFace;

/**
 *
 * @author Admin
 */
public class LoginFrm extends javax.swing.JDialog {

    private BaseDaoInterFace dao;
//    private GiaoCaFrm gcFrm;
    CardLayout cardGoc;
    CardLayout cardResetPass;
    int codeSMS;
    Thread t;

    public LoginFrm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jpnlogo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jpnCardGoc = new javax.swing.JPanel();
        jpnLogin = new javax.swing.JPanel();
        jpnID = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        txtID = new javax.swing.JTextField();
        jpnPass = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        jSeparator2 = new javax.swing.JSeparator();
        btnLogin = new javax.swing.JButton();
        lblForgotPass = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        jpnResetPass = new javax.swing.JPanel();
        lblDoiPASS = new javax.swing.JLabel();
        lblMNV = new javax.swing.JLabel();
        lblCode = new javax.swing.JLabel();
        jpnMNV = new javax.swing.JPanel();
        txtMaNV = new javax.swing.JTextField();
        btnMaNV = new javax.swing.JButton();
        jpnMXN = new javax.swing.JPanel();
        txtCode = new javax.swing.JTextField();
        btnOK = new javax.swing.JButton();
        jpnCardChil = new javax.swing.JPanel();
        jpn0 = new javax.swing.JPanel();
        btnHuy1 = new javax.swing.JButton();
        jpnCode = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jpnNewPass = new javax.swing.JPanel();
        txtNewPass = new javax.swing.JPasswordField();
        btnDongY = new javax.swing.JButton();
        jpnNewPass2 = new javax.swing.JPanel();
        txtNewPass2 = new javax.swing.JPasswordField();
        btnHuy = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Đăng Nhập Hệ Thống Bán Hàng");
        setUndecorated(true);

        jpnlogo.setBackground(new java.awt.Color(255, 102, 0));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/icons/Logo_Chinh.png"))); // NOI18N

        javax.swing.GroupLayout jpnlogoLayout = new javax.swing.GroupLayout(jpnlogo);
        jpnlogo.setLayout(jpnlogoLayout);
        jpnlogoLayout.setHorizontalGroup(
            jpnlogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlogoLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpnlogoLayout.setVerticalGroup(
            jpnlogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlogoLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpnCardGoc.setLayout(new java.awt.CardLayout());

        jpnLogin.setBackground(new java.awt.Color(204, 102, 255));

        jpnID.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/icons/login24.png"))); // NOI18N

        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));

        txtID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtID.setText("admin");
        txtID.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 0, 0, 1, new java.awt.Color(255, 255, 255)));
        txtID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIDFocusGained(evt);
            }
        });
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jpnIDLayout = new javax.swing.GroupLayout(jpnID);
        jpnID.setLayout(jpnIDLayout);
        jpnIDLayout.setHorizontalGroup(
            jpnIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnIDLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                    .addComponent(txtID))
                .addContainerGap())
        );
        jpnIDLayout.setVerticalGroup(
            jpnIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnIDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jpnPass.setBackground(new java.awt.Color(255, 255, 255));
        jpnPass.setAlignmentX(0.0F);
        jpnPass.setAlignmentY(0.0F);
        jpnPass.setPreferredSize(new java.awt.Dimension(315, 52));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/icons/key.png"))); // NOI18N

        txtPass.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtPass.setText("1234");
        txtPass.setAlignmentX(0.0F);
        txtPass.setAlignmentY(0.0F);
        txtPass.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 0, 0, 2, new java.awt.Color(255, 255, 255)));
        txtPass.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPassFocusGained(evt);
            }
        });
        txtPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPassKeyPressed(evt);
            }
        });

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jpnPassLayout = new javax.swing.GroupLayout(jpnPass);
        jpnPass.setLayout(jpnPassLayout);
        jpnPassLayout.setHorizontalGroup(
            jpnPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnPassLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                    .addComponent(txtPass, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpnPassLayout.setVerticalGroup(
            jpnPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnPassLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btnLogin.setBackground(new java.awt.Color(102, 51, 255));
        btnLogin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("Đăng Nhập");
        btnLogin.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        lblForgotPass.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblForgotPass.setText("Quên mật khẩu / tài khoản ?");
        lblForgotPass.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lblForgotPassMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblForgotPassMouseMoved(evt);
            }
        });
        lblForgotPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblForgotPassMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblForgotPassMouseExited(evt);
            }
        });

        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel9.setText("Đăng Nhập");

        btnExit.setBackground(new java.awt.Color(102, 51, 255));
        btnExit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExit.setForeground(new java.awt.Color(255, 255, 255));
        btnExit.setText("Thoát");
        btnExit.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnLoginLayout = new javax.swing.GroupLayout(jpnLogin);
        jpnLogin.setLayout(jpnLoginLayout);
        jpnLoginLayout.setHorizontalGroup(
            jpnLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnLoginLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(74, 74, 74))
            .addGroup(jpnLoginLayout.createSequentialGroup()
                .addGroup(jpnLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnLoginLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jpnLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jpnPass, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                            .addComponent(jpnID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jpnLoginLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExit))
                    .addGroup(jpnLoginLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(jpnLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblForgotPass, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpnLoginLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnExit, btnLogin});

        jpnLoginLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jpnID, jpnPass});

        jpnLoginLayout.setVerticalGroup(
            jpnLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(35, 35, 35)
                .addComponent(jpnID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpnPass, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jpnLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblForgotPass)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jpnLoginLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnExit, btnLogin});

        jpnCardGoc.add(jpnLogin, "cardLogin");

        jpnResetPass.setBackground(new java.awt.Color(51, 102, 255));

        lblDoiPASS.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblDoiPASS.setText("Đổi Mật Khẩu");

        lblMNV.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblMNV.setForeground(new java.awt.Color(255, 255, 255));
        lblMNV.setText("Mã Nhân Viên");

        lblCode.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCode.setForeground(new java.awt.Color(255, 255, 255));
        lblCode.setText("Mã Code");

        jpnMNV.setLayout(new java.awt.BorderLayout());

        txtMaNV.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtMaNV.setForeground(new java.awt.Color(51, 153, 255));
        txtMaNV.setBorder(javax.swing.BorderFactory.createMatteBorder(10, 10, 10, 10, new java.awt.Color(255, 255, 255)));
        txtMaNV.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMaNVFocusGained(evt);
            }
        });
        txtMaNV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaNVKeyPressed(evt);
            }
        });
        jpnMNV.add(txtMaNV, java.awt.BorderLayout.CENTER);

        btnMaNV.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMaNV.setText("Xác Nhận");
        btnMaNV.setBorder(null);
        btnMaNV.setPreferredSize(new java.awt.Dimension(99, 25));
        btnMaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaNVActionPerformed(evt);
            }
        });
        jpnMNV.add(btnMaNV, java.awt.BorderLayout.LINE_END);

        jpnMXN.setPreferredSize(new java.awt.Dimension(329, 71));
        jpnMXN.setLayout(new java.awt.BorderLayout());

        txtCode.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtCode.setForeground(new java.awt.Color(51, 153, 255));
        txtCode.setBorder(javax.swing.BorderFactory.createMatteBorder(10, 10, 10, 10, new java.awt.Color(255, 255, 255)));
        txtCode.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                txtCodeMouseDragged(evt);
            }
        });
        txtCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCodeFocusGained(evt);
            }
        });
        jpnMXN.add(txtCode, java.awt.BorderLayout.CENTER);

        btnOK.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnOK.setText("OK");
        btnOK.setBorder(null);
        btnOK.setEnabled(false);
        btnOK.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        btnOK.setMinimumSize(new java.awt.Dimension(0, 17));
        btnOK.setPreferredSize(new java.awt.Dimension(99, 25));
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });
        jpnMXN.add(btnOK, java.awt.BorderLayout.LINE_END);

        jpnCardChil.setBackground(new java.awt.Color(51, 153, 255));
        jpnCardChil.setLayout(new java.awt.CardLayout());

        jpn0.setBackground(new java.awt.Color(51, 102, 255));

        btnHuy1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnHuy1.setText("Hủy");
        btnHuy1.setBorder(null);
        btnHuy1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuy1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpn0Layout = new javax.swing.GroupLayout(jpn0);
        jpn0.setLayout(jpn0Layout);
        jpn0Layout.setHorizontalGroup(
            jpn0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpn0Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(btnHuy1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(144, Short.MAX_VALUE))
        );
        jpn0Layout.setVerticalGroup(
            jpn0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpn0Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHuy1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpnCardChil.add(jpn0, "card0");

        jpnCode.setBackground(new java.awt.Color(51, 102, 255));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tạo Mật Khẩu Mới");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nhập Lại Mật Khẩu");

        jpnNewPass.setPreferredSize(new java.awt.Dimension(329, 71));
        jpnNewPass.setLayout(new java.awt.BorderLayout());

        txtNewPass.setForeground(new java.awt.Color(51, 153, 255));
        txtNewPass.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 10, 2, 2, new java.awt.Color(255, 255, 255)));
        txtNewPass.setPreferredSize(new java.awt.Dimension(0, 17));
        txtNewPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNewPassFocusGained(evt);
            }
        });
        txtNewPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNewPassKeyPressed(evt);
            }
        });
        jpnNewPass.add(txtNewPass, java.awt.BorderLayout.CENTER);

        btnDongY.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDongY.setText("Đồng Ý");
        btnDongY.setPreferredSize(new java.awt.Dimension(99, 25));
        btnDongY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDongYActionPerformed(evt);
            }
        });
        jpnNewPass.add(btnDongY, java.awt.BorderLayout.LINE_END);

        jpnNewPass2.setLayout(new java.awt.BorderLayout());

        txtNewPass2.setForeground(new java.awt.Color(51, 153, 255));
        txtNewPass2.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 10, 2, 2, new java.awt.Color(255, 255, 255)));
        txtNewPass2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNewPass2FocusGained(evt);
            }
        });
        txtNewPass2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNewPass2KeyPressed(evt);
            }
        });
        jpnNewPass2.add(txtNewPass2, java.awt.BorderLayout.CENTER);

        btnHuy.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnHuy.setText("Hủy");
        btnHuy.setPreferredSize(new java.awt.Dimension(99, 25));
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });
        jpnNewPass2.add(btnHuy, java.awt.BorderLayout.LINE_END);

        javax.swing.GroupLayout jpnCodeLayout = new javax.swing.GroupLayout(jpnCode);
        jpnCode.setLayout(jpnCodeLayout);
        jpnCodeLayout.setHorizontalGroup(
            jpnCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnCodeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jpnNewPass2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpnNewPass, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpnCodeLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jpnNewPass, jpnNewPass2});

        jpnCodeLayout.setVerticalGroup(
            jpnCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnCodeLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnNewPass, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnNewPass2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(142, 142, 142))
        );

        jpnCodeLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jpnNewPass, jpnNewPass2});

        jpnCardChil.add(jpnCode, "cardCode");

        javax.swing.GroupLayout jpnResetPassLayout = new javax.swing.GroupLayout(jpnResetPass);
        jpnResetPass.setLayout(jpnResetPassLayout);
        jpnResetPassLayout.setHorizontalGroup(
            jpnResetPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnResetPassLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnResetPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnResetPassLayout.createSequentialGroup()
                        .addComponent(jpnMNV, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnResetPassLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblMNV)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDoiPASS)
                        .addGap(119, 119, 119))))
            .addGroup(jpnResetPassLayout.createSequentialGroup()
                .addGroup(jpnResetPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpnCardChil, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpnResetPassLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpnResetPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCode)
                            .addComponent(jpnMXN, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jpnResetPassLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jpnMNV, jpnMXN});

        jpnResetPassLayout.setVerticalGroup(
            jpnResetPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnResetPassLayout.createSequentialGroup()
                .addGroup(jpnResetPassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnResetPassLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lblDoiPASS))
                    .addGroup(jpnResetPassLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(lblMNV)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnMNV, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpnMXN, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jpnCardChil, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132))
        );

        jpnResetPassLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jpnMNV, jpnMXN});

        jpnCardGoc.add(jpnResetPass, "cardResetPass");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jpnlogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jpnCardGoc, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpnCardGoc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 718, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        String id = txtID.getText().trim(),
                pass = new String(txtPass.getPassword());
        try {

            NhanVien nv = (NhanVien) dao.selectById(id);
            if (nv == null) {
                Messeger.showErrorDialog(this, "Sai tên đăng nhập", "Error!");
                txtID.setBackground(Color.YELLOW);
                return;
            } else if (!pass.equalsIgnoreCase(nv.getPassWord())) {
                Messeger.showErrorDialog(this, "Sai mật khẩu", "Error!");
                txtPass.setBackground(Color.YELLOW);
                return;
            } else {
                Auth.user = nv;
                Messeger.alert(this, "Bạn đã đăng nhập thành công");
                GiaoCaFrm gcFrm = new GiaoCaFrm(null, true);
                if(!gcFrm.nhanCa()) {
                    
                    gcFrm.setVisible(true);
                }
                this.dispose();
            }
        } catch (Exception ex) {
            Messeger.showErrorDialog(this, "Lỗi đăng nhập", "Error!");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void lblForgotPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblForgotPassMouseClicked
        cardGoc.show(jpnCardGoc, "cardResetPass");
        cardResetPass.show(jpnCardChil, "card0");
    }//GEN-LAST:event_lblForgotPassMouseClicked

    private void btnMaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaNVActionPerformed
        String maNV = txtMaNV.getText().trim();
        String mailAddress = "";
        if (maNV.contains("@")) {
            try {
                mailAddress = maNV;
                ArrayList<NhanVien> list = dao.selectAll();
                boolean check = false;
                for (NhanVien nv : list) {
                    if (nv.getEmail().trim().equals(maNV)) {
                        maNV = nv.getMaNV();
                        check = true;
                        break;
                    }
                }
                if (check == true) {
                    try {
                        txtMaNV.setBackground(Color.WHITE);
                        codeSMS = ResetPassByEmail.resetPass(mailAddress);
                        //   String toMail = mailAddress.substring(0, 4) + "***" + mailAddress.substring(mailAddress.length() - 16);
                        Messeger.alert(this, "Hãy nhập mã xác nhận được gửi tới email : \"" + mailAddress + "\"\nMã Nhân Viên Là: \"" + maNV + "\"");
                        txtMaNV.setText(maNV);
                        this.Time_Run();
                    } catch (Exception e) {
                        Messeger.showErrorDialog(this, "Mail không tồn tại", "Error!");
                        e.printStackTrace();
                    }
                } else {
                    Messeger.alert(this, "Email không tồn tại!");
                    txtMaNV.setBackground(Color.YELLOW);
                    btnOK.setEnabled(check);
                    return;
                }
                //
            } catch (Exception ex) {
                Messeger.showErrorDialog(this, "Lỗi tìm mail", "Error!");
                ex.printStackTrace();
            }
        } else {
            try {

                ArrayList<NhanVien> list = dao.selectAll();
                boolean check = false;
                for (NhanVien nv : list) {
                    if (nv.getMaNV().trim().equals(maNV)) {
                        mailAddress = nv.getEmail();
                        check = true;
                        break;
                    }
                }
                if (check == true) {
                    try {
                        txtMaNV.setBackground(Color.WHITE);
                        codeSMS = ResetPassByEmail.resetPass(mailAddress);
                        String toMail = mailAddress.substring(0, 4) + "***" + mailAddress.substring(mailAddress.length() - 16);
                        Messeger.alert(this, "Hãy nhập mã xác nhận được gửi tới email : \"" + toMail + "\"");
                        this.Time_Run();
                    } catch (Exception e) {
                        Messeger.showErrorDialog(this, "Mail không tồn tại", "Error!");
                        e.printStackTrace();
                    }
                } else {
                    Messeger.alert(this, "Mã nhân viên không tồn tại!");
                    txtMaNV.setBackground(Color.YELLOW);
                    btnOK.setEnabled(check);
                    return;
                }
            } catch (Exception ex) {
                Messeger.alert(this, "Lỗi tìm mã nhân viên!");
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnMaNVActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed

        if (XValidate.isEmpty(txtCode)) {
            return;
        }
        int code = Integer.parseInt(txtCode.getText());
        if (code == codeSMS) {
            cardResetPass.show(jpnCardChil, "cardCode");
        } else {
            Messeger.showErrorDialog(this, "Sai mã xác nhận!", "Error !");
            cardResetPass.show(jpnCardChil, "card0");

        }
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        cardGoc.show(jpnCardGoc, "cardLogin");
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btnDongYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDongYActionPerformed
        if (XValidate.isEmpty(txtNewPass)) {
            Messeger.showErrorDialog(this, "Không để trống Mật khẩu mới", "Error!");
            return;
        } else if (!txtNewPass.getText().equalsIgnoreCase(txtNewPass2.getText())) {
            Messeger.showErrorDialog(this, "Mật khẩu mới không khớp", "Error!");
            txtNewPass2.setBackground(Color.YELLOW);
            return;
        } else {
            try {
                ArrayList<NhanVien> list = dao.selectAll();
                // boolean check = false;
                for (NhanVien nv : list) {
                    if (nv.getMaNV().equalsIgnoreCase(txtMaNV.getText())) {
                        nv.setPassWord(new String(txtNewPass.getPassword()));
                        dao.update(nv);
                        break;
                    }
                }
                Messeger.alert(this, "Đổi mật khẩu thành công!");
                Auth.user = null;
                cardGoc.show(jpnCardGoc, "cardLogin");
            } catch (Exception ex) {
                Messeger.showErrorDialog(this, "Lỗi quên mật khẩu!", "Lỗi!");
                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_btnDongYActionPerformed

    private void btnHuy1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuy1ActionPerformed
        cardGoc.show(jpnCardGoc, "cardLogin");
    }//GEN-LAST:event_btnHuy1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cardGoc.show(jpnCardGoc, "cardLogin");
    }//GEN-LAST:event_jButton1ActionPerformed


    private void txtMaNVFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaNVFocusGained
        txtMaNV.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtMaNVFocusGained

    private void txtCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodeFocusGained
        txtCode.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtCodeFocusGained

    private void lblForgotPassMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblForgotPassMouseDragged
        lblForgotPass.setForeground(Color.black);    }//GEN-LAST:event_lblForgotPassMouseDragged

    private void lblForgotPassMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblForgotPassMouseMoved
        lblForgotPass.setForeground(Color.red);
    }//GEN-LAST:event_lblForgotPassMouseMoved

    private void lblForgotPassMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblForgotPassMouseExited
        lblForgotPass.setForeground(Color.black);
    }//GEN-LAST:event_lblForgotPassMouseExited

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        if (Messeger.confirm(this, "Bạn có muốn thoát không ?")) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void txtIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            this.txtPass.requestFocus();
        }
    }//GEN-LAST:event_txtIDKeyPressed

    private void txtPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyPressed
        this.enter(evt);
    }//GEN-LAST:event_txtPassKeyPressed

    private void txtMaNVKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaNVKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.btnMaNV.doClick();
        }
    }//GEN-LAST:event_txtMaNVKeyPressed

    private void txtNewPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewPassKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtNewPass2.requestFocus();
        }
    }//GEN-LAST:event_txtNewPassKeyPressed

    private void txtNewPass2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewPass2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.btnDongY.doClick();
        }
    }//GEN-LAST:event_txtNewPass2KeyPressed

    private void txtCodeMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCodeMouseDragged

    }//GEN-LAST:event_txtCodeMouseDragged

    private void txtNewPassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNewPassFocusGained
        txtNewPass.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtNewPassFocusGained

    private void txtNewPass2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNewPass2FocusGained
        txtNewPass2.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtNewPass2FocusGained

    private void txtIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIDFocusGained
        txtID.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtIDFocusGained

    private void txtPassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPassFocusGained
        txtPass.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtPassFocusGained

    private void EnterAcctions(KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnLogin.doClick();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LoginFrm dialog = new LoginFrm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDongY;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnHuy1;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnMaNV;
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JPanel jpn0;
    private javax.swing.JPanel jpnCardChil;
    private javax.swing.JPanel jpnCardGoc;
    private javax.swing.JPanel jpnCode;
    private javax.swing.JPanel jpnID;
    private javax.swing.JPanel jpnLogin;
    private javax.swing.JPanel jpnMNV;
    private javax.swing.JPanel jpnMXN;
    private javax.swing.JPanel jpnNewPass;
    private javax.swing.JPanel jpnNewPass2;
    private javax.swing.JPanel jpnPass;
    private javax.swing.JPanel jpnResetPass;
    private javax.swing.JPanel jpnlogo;
    private javax.swing.JLabel lblCode;
    private javax.swing.JLabel lblDoiPASS;
    private javax.swing.JLabel lblForgotPass;
    private javax.swing.JLabel lblMNV;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JPasswordField txtNewPass;
    private javax.swing.JPasswordField txtNewPass2;
    private javax.swing.JPasswordField txtPass;
    // End of variables declaration//GEN-END:variables

    private void init() {
        setLocationRelativeTo(null);
        this.dao = new NhanVienDao();
        
        cardGoc = (CardLayout) jpnCardGoc.getLayout();
        cardResetPass = (CardLayout) jpnCardChil.getLayout();
        cardGoc.show(jpnCardGoc, "cardLogin");
    }

    private void enter(KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.btnLogin.doClick();
        }
    }

    private void Time_Run() {
        t = new Thread() {
            @Override
            public void run() {
//                String xacNhan = txtMaNV.getText();
                int time = 30;
                while (true) {
                    try {
                        time--;
                        if (time <= 0) {
                            btnOK.setText("OK");
                            btnOK.setEnabled(false);
                            btnMaNV.setEnabled(true);
                            btnMaNV.setText("Xác Nhận");
                            t.stop();
                        } else {
                            btnMaNV.setText(String.valueOf(time));
                            btnOK.setEnabled(true);
                            btnMaNV.setEnabled(false);
                        }

                        t.sleep(1000);
                    } catch (InterruptedException ex) {
                        Messeger.showErrorDialog(null, "Lỗi chờ code", "Error");
                        ex.printStackTrace();
                    }
                }
            }
        };
        t.start();
    }
}
