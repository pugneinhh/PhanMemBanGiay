/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views;

import DomainModels.SanPham;
import Services.ChiTietSanPhamService;
import Services.DanhMucService;
import Services.KhachHangService;
import Services.SanPhamService;
import ViewModels.ChiTietSanPhamModel;
import ViewModels.DanhMucModel;
import ViewModels.KhachHangViewModel;
import ViewModels.KhuyenMaiModel;
import java.awt.CardLayout;
import java.awt.Color;
import java.math.BigDecimal;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Phanh
 */
public class BanHangJPanel extends javax.swing.JPanel {

    CardLayout cardlayout;
    private ChiTietSanPhamService CTSPService;
    private SanPhamService spser;
    private KhachHangService khservice;
    private KhuyenMaiModel km;
    boolean isSanPhamSelected = true;
//    private HoaDonChiTiet
    DefaultTableModel modelTable = new DefaultTableModel();
    int stt = 0;
    int slNhap;
    int slGoc;
    int maxMaHD;
//    private hoa hd;
    JTabbedPane pnlTabs;
    DefaultTableModel dtmHoaDon;
    Locale localeVN = new Locale("vi", "VN");
    NumberFormat df = NumberFormat.getCurrencyInstance(localeVN);
    DefaultComboBoxModel<DanhMucModel> CBBModelDM;
    DanhMucService dmsv;

    /**
     * Creates new form BanHangJPanel
     */
    public BanHangJPanel() {
        initComponents();
        dmsv = new DanhMucService();
        dtmHoaDon=(DefaultTableModel) tblGioHang.getModel();
        CTSPService = new ChiTietSanPhamService();
        khservice = new KhachHangService();
        km=new KhuyenMaiModel();
        spser = new SanPhamService();
        this.pnlTabs = pnlTabs;
        loadTableBanHang(CTSPService.getAllChiTietSanPham());
        loadkhachhang(khservice.getAllKhachHang());
        loadgiohang(CTSPService.getAllChiTietSanPham());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void loadTableBanHang(ArrayList<ChiTietSanPhamModel> list) {
        modelTable = (DefaultTableModel) tblBanHang.getModel();
        modelTable.setRowCount(0);
        for (ChiTietSanPhamModel ctspM : list) {
            modelTable.addRow(new Object[]{
                ctspM.getIdSP(),
                ctspM.getGiaBan(),
                ctspM.getSoLuong(),
                ctspM.getIdSize(),
                ctspM.getIdDC(),
                ctspM.getIdCL(),
                ctspM.getIdMS(),
                ctspM.getIdDM(),
                ctspM.getMota()
            });
        }
    }

    private void loadTableBanHang(SanPham sp) {
        ArrayList<ChiTietSanPhamModel> list = new ArrayList<>();
        modelTable = (DefaultTableModel) tblBanHang.getModel();
        modelTable.setRowCount(0);
        for (ChiTietSanPhamModel ctspM : list) {
            modelTable.addRow(new Object[]{
                ctspM.getIdSP(),
                ctspM.getGiaBan(),
                ctspM.getSoLuong(),
                ctspM.getIdSize(),
                ctspM.getIdDC(),
                ctspM.getIdCL(),
                ctspM.getIdMS(),
                ctspM.getIdDM(),
                ctspM.getMota()
            });
        }
    }

    private void loadkhachhang(ArrayList<KhachHangViewModel> list) {
        modelTable = (DefaultTableModel) tblThongtinKH.getModel();
        modelTable.setRowCount(0);
        for (KhachHangViewModel khmd : list) {
            modelTable.addRow(new Object[]{
                khmd.getMaKH(),
                khmd.getTenKH(),
                khmd.getLoaiKH(),
                khmd.getDiaChi(),
                khmd.getGioiTinh(),
                khmd.getEmail(),
                khmd.getSdt(),
                khmd.getNgaySinh(),
                khmd.getNgayThamGia(),
                khmd.getTrangThai()
            });
        }
    }

    private void loadgiohang(ArrayList<ChiTietSanPhamModel> list) {
  modelTable=(DefaultTableModel) tblGioHang.getModel();
        modelTable.setRowCount(0);
        stt = 1;
        for (ChiTietSanPhamModel ct : list) {
            modelTable.addRow(new Object[]{
                ct.getIdSP(),
                ct.getSoLuong(),
                ct.getGiaBan(), //                
                new BigDecimal(ct.getSoLuong() * Double.parseDouble(ct.getGiaBan().toString()))
            });
            stt++;
        }
    }

//    public void masuli() {
//        Action ThemSPVaoHD = new AbstractAction() {
//            public void actionPerformed(ActionEvent e) {
//                JTable table = (JTable) e.getSource();
//                int modelRow = Integer.valueOf(e.getActionCommand());
//                slGoc = Integer.parseInt((((DefaultTableModel) table.getModel()).getValueAt(modelRow, 4)) + "");
//                String maSP = (((DefaultTableModel) table.getModel()).getValueAt(modelRow, 0)) + "";
//                if (!nhapSl()) {
//                    boolean c = true;
//                    for (int i = 0; i < tblGioHang.getRowCount(); i++) {
//                        String masphd = tblGioHang.getValueAt(i, 8) + "";
//                        int sl = Integer.parseInt(tblGioHang.getValueAt(i, 2) + "");
//                        double dg = df.parse(tblGioHang.getValueAt(i, 5) + "", new ParsePosition(0)).doubleValue();
//                        if (maSP == masphd) {
//                            int soLuongSP = slGoc - slNhap;
//                            int soLuongCTHD = slNhap + sl;
//                            tblGioHang.setValueAt(soLuongCTHD, i, 2);
//                            tblGioHang.setValueAt(df.format(soLuongCTHD * dg), i, 7);
//                            ((DefaultTableModel) table.getModel()).setValueAt(slGoc - slNhap, modelRow, 4);
//                            tongTien();
////                            suaCTHD(maSP, soLuongSP, soLuongCTHD, 0);
//                            return;
//                        }
//                    }
//
//                    double thanhTien = df.parse(((DefaultTableModel) table.getModel()).getValueAt(modelRow, 3) + "", new ParsePosition(0)).doubleValue() * slNhap;
//
//                    Object[] data = null;
//                    try {
//                        data = new Object[]{
//                            null,
////                            CTSPService.getChiTietSanPhamByMa(maSP).slNhap,
//                            null,
//                            null,
//                            (((DefaultTableModel) table.getModel()).getValueAt(modelRow, 3)),
//                            null,
//                            df.format(thanhTien),
//                            maSP
//                        };
//                    } catch (Exception ex) {
//                        Logger.getLogger(BanHangJPanel.class.getName()).log(Level.SEVERE, null, ex);
//                    }
//                    dtmHoaDon.addRow(data);
//                    ((DefaultTableModel) table.getModel()).setValueAt(slGoc - slNhap, modelRow, 4);
//                  ChiTietSanPhamModel ctsp=new ChiTietSanPhamModel();
////                    ctsp.setIdSP(idSP);
//                    ctsp.setSoLuong(slGoc - slNhap);
//                    try {
//                        CTSPService.updateCTSP(ctsp);
//                    } catch (Exception ex) {
//                        Logger.getLogger(BanHangJPanel.class.getName()).log(Level.SEVERE, null, ex);
//                    }
//                    tongTien();
//                    if (lblhoadontrong.getText().equalsIgnoreCase("Hóa đơn trống")) {
//                        taoHoaDon();
//                    }
////                    taoHDCT(maSP, slNhap);
//                }
//
//            }
//
//        };
//    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbbDanhMuc = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        btnSanpham = new javax.swing.JButton();
        btnKhBh = new javax.swing.JButton();
        txtTimKiemBH = new javax.swing.JTextField();
        btnTimKiemBH = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSLSP = new javax.swing.JTextField();
        txtThanhTien = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jpanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGioHang = new javax.swing.JTable();
        lbltenkh = new javax.swing.JLabel();
        lblhoadontrong = new javax.swing.JLabel();
        pncardgoc = new javax.swing.JPanel();
        Khach = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblThongtinKH = new javax.swing.JTable();
        Sanpham = new javax.swing.JScrollPane();
        tblBanHang = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1320, 639));

        cbbDanhMuc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbDanhMucItemStateChanged(evt);
            }
        });
        cbbDanhMuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbDanhMucActionPerformed(evt);
            }
        });

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnSanpham.setText("Sản Phẩm");
        btnSanpham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSanphamActionPerformed(evt);
            }
        });

        btnKhBh.setText("Khách Hàng");
        btnKhBh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKhBhActionPerformed(evt);
            }
        });

        txtTimKiemBH.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTimKiemBHCaretUpdate(evt);
            }
        });
        txtTimKiemBH.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimKiemBHFocusLost(evt);
            }
        });

        btnTimKiemBH.setText("Tìm  Kiếm");
        btnTimKiemBH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemBHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(btnSanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnKhBh, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimKiemBH, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTimKiemBH, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
<<<<<<< HEAD
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
=======
                    .addComponent(btnSanpham, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(btnKhBh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
>>>>>>> origin/master
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnTimKiemBH, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                            .addComponent(txtTimKiemBH))))
                .addGap(7, 7, 7))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Danh Mục");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("0");

        txtSLSP.setText("Số Lượng");
        txtSLSP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSLSPFocusGained(evt);
            }
        });

        txtThanhTien.setText("Thành Tiền");
        txtThanhTien.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtThanhTienFocusGained(evt);
            }
        });

        jLabel5.setText("-");

        jLabel6.setText("-");

        jButton11.setText("Thanh Toán");

        jButton12.setText("Hóa Đơn Mới");

        jButton13.setText("Xóa Đơn Hàng");
        jButton13.setPreferredSize(new java.awt.Dimension(111, 22));

        jButton14.setText("Đặt Hàng");
        jButton14.setPreferredSize(new java.awt.Dimension(111, 22));

        tblGioHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Sản Phẩm", "Số Lượng ", "Đơn Giá", "Đơn Giá Khi Giảm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGioHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGioHangMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblGioHangMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(tblGioHang);

        javax.swing.GroupLayout jpanelLayout = new javax.swing.GroupLayout(jpanel);
        jpanel.setLayout(jpanelLayout);
        jpanelLayout.setHorizontalGroup(
            jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jpanelLayout.setVerticalGroup(
            jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        lbltenkh.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbltenkh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltenkh.setText("Khách Lẻ");

        lblhoadontrong.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblhoadontrong.setText("Hóa Đơn Trống");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addComponent(txtThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addComponent(txtSLSP, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lbltenkh, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(93, 93, 93)
                                .addComponent(lblhoadontrong, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton11, jButton12, jButton13, jButton14});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbltenkh, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(lblhoadontrong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSLSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(46, 46, 46)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton12, jButton13});

        pncardgoc.setLayout(new java.awt.CardLayout());

        tblThongtinKH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã KH", "Tên KH", "Loại KH", "Địa chỉ", "Giới tính", "Email", "SDT", "Ngày sinh", "Ngày tham gia", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThongtinKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThongtinKHMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblThongtinKH);

        javax.swing.GroupLayout KhachLayout = new javax.swing.GroupLayout(Khach);
        Khach.setLayout(KhachLayout);
        KhachLayout.setHorizontalGroup(
            KhachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 680, Short.MAX_VALUE)
            .addGroup(KhachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(KhachLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        KhachLayout.setVerticalGroup(
            KhachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
            .addGroup(KhachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(KhachLayout.createSequentialGroup()
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pncardgoc.add(Khach, "khach");

        tblBanHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Tên SP", "Giá Bán", "Số Lượng", "Size", "Độ Cao", "Chất Liệu", "Màu Sắc", "Danh Mục", "Mô Tả"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
<<<<<<< HEAD
        jScrollPane4.setViewportView(tblBanHang);

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setPreferredSize(new java.awt.Dimension(569, 591));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Khách Lẻ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Khách Lẻ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("0");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Sản Phẩm", "Số Lượng ", "Đơn Giá", "Đơn Giá Khi Giảm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
=======
        tblBanHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBanHangMouseClicked(evt);
>>>>>>> origin/master
            }
        });
        Sanpham.setViewportView(tblBanHang);

<<<<<<< HEAD
        jTextField4.setText("Số Lượng");

        jTextField5.setText("Thành Tiền");

        jLabel5.setText("-");

        jLabel6.setText("-");

        jButton11.setText("Thanh Toán");

        jButton12.setText("Hóa Đơn Mới");

        jButton13.setText("Xóa Đơn Hàng");

        jButton14.setText("Đặt Hàng");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(7, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton11, jButton12, jButton13, jButton14});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton12, jButton13});

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, jLabel3});
=======
        pncardgoc.add(Sanpham, "sanpham");
>>>>>>> origin/master

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(118, 118, 118))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pncardgoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cbbDanhMuc, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pncardgoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
<<<<<<< HEAD
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
=======
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
>>>>>>> origin/master
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSLSPFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSLSPFocusGained

        txtSLSP.setText("");

    }//GEN-LAST:event_txtSLSPFocusGained

    private void btnKhBhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKhBhActionPerformed
        CardLayout layout = (CardLayout) pncardgoc.getLayout();
        layout.show(pncardgoc, "khach");
        this.isSanPhamSelected = false;
        changeBackgroud_SP_KH();
    }//GEN-LAST:event_btnKhBhActionPerformed

    private void tblGioHangMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGioHangMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblGioHangMouseEntered

    private void tblGioHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGioHangMouseClicked

    }//GEN-LAST:event_tblGioHangMouseClicked

    private void btnSanphamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSanphamActionPerformed
        CardLayout layout = (CardLayout) pncardgoc.getLayout();
        layout.show(pncardgoc, "sanpham");
        this.isSanPhamSelected = true;
        changeBackgroud_SP_KH();
    }//GEN-LAST:event_btnSanphamActionPerformed

    private void txtTimKiemBHCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTimKiemBHCaretUpdate
        if (txtTimKiemBH.getText().equalsIgnoreCase("Tìm Kiếm Khách Hàng") || txtTimKiemBH.getText().equalsIgnoreCase("Tìm Kiếm Sản Phẩm")) {
            txtTimKiemBH.setText("");
            txtTimKiemBH.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtTimKiemBHCaretUpdate

    private void btnTimKiemBHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemBHActionPerformed

        if (isSanPhamSelected == true) {
            if (txtTimKiemBH.getText().equalsIgnoreCase("Tìm Kiếm Sản Phẩm")) {
                JOptionPane.showMessageDialog(this, "Bạn phải nhập Tên hoặc mã sản phẩm");
                return;
            }
            String maSP = txtTimKiemBH.getText();
            ArrayList<ChiTietSanPhamModel> listSP = CTSPService.getChiTietSanPhamByMa(maSP);
            loadTableBanHang(listSP);
        } else {
            if (txtTimKiemBH.getText().equalsIgnoreCase("Tìm Kiếm Khách Hàng")) {
                JOptionPane.showMessageDialog(this, "Bạn phải nhập Tên hoặc mã khách hàng");
                return;
            }
            String makh = txtTimKiemBH.getText();
            ArrayList<KhachHangViewModel> listSP = khservice.gettheomakh(makh);
            loadkhachhang(listSP);
        }


    }//GEN-LAST:event_btnTimKiemBHActionPerformed

    private void txtTimKiemBHFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemBHFocusLost
        if (txtTimKiemBH.getText().trim().isEmpty()) {
            txtTimKiemBH.setForeground(new Color(255, 0, 0));
            changeBackgroud_SP_KH();
        }
    }//GEN-LAST:event_txtTimKiemBHFocusLost

    private void cbbDanhMucItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbDanhMucItemStateChanged
//          SanPham sp = new SanPham();
//        DanhMuc dm = (DanhMuc) cbbDanhMuc.getSelectedItem();
//        if (dm == null) {
//            return;
//        }
//        sp.setMaSP(dm.getMaDM());
//        sp.setTenSP("");
//        loadTableBanHang(sp);
        loadCombo();
    }//GEN-LAST:event_cbbDanhMucItemStateChanged
    public void loadCombo() {
        ArrayList<DanhMucModel> sp = dmsv.getAllDanhMuc();
        cbbDanhMuc.setModel((DefaultComboBoxModel) CBBModelDM);
        for (DanhMucModel dm : sp) {
            CBBModelDM.addElement(dm);
        }

    }
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        loadDataToCBBDM();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void cbbDanhMucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbDanhMucActionPerformed
        loadCombo();
    }//GEN-LAST:event_cbbDanhMucActionPerformed

    private void txtThanhTienFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtThanhTienFocusGained
        txtThanhTien.setText("");
    }//GEN-LAST:event_txtThanhTienFocusGained

    private void tblThongtinKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThongtinKHMouseClicked

    }//GEN-LAST:event_tblThongtinKHMouseClicked

    private void tblBanHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBanHangMouseClicked
//         int row=tblBanHang.getSelectedRow();
//  if(row==-1){
//      return;
//  }
//  String ten=tblBanHang.getValueAt(row, 0).toString();
//  String sl=tblBanHang.getValueAt(row, 2).toString();
//  String gb=tblBanHang.getValueAt(row, 1).toString();
//       ArrayList<ChiTietSanPhamModel> li = CTSPService.getChiTietSanPhamByMa(ten);
//        KhachHangViewModel kh = new KhachHangViewModel();
//        ChiTietSanPhamModel ctsp=new ChiTietSanPhamModel();
//        kh.setMaKH(khservice.getIDHoaDon(ten));
//        kh.setMaKH(khservice.getIDHoaDon(ten));
//
// 
//        ctsp.setSoLuong(1);
//        for (HoaDonChiTiet_ChiTietSP_SPham h : li) {
//            if (h.getMaSP().equalsIgnoreCase(maSP)) {
//                hdct.setSl(h.getSl() + 1);
//                hoadonct_ser.updateHoaDonChiTiet(hdct);
//                loadGioHang(hoadonct_ser.getAllHoaDon_HoaDonChiTiet_ChiTietSP_theoMahd(maHD));
//                ArrayList<HoaDonChiTiet_ChiTietSP_SPham> li2 = hoadonct_ser.getAllHoaDon_HoaDonChiTiet_ChiTietSP_theoMahd(maHD);
//                double tongTien = 0;
//                for (HoaDonChiTiet_ChiTietSP_SPham hoaDonChiTiet_ChiTietSP_SPham : li2) {
//                    tongTien += hoaDonChiTiet_ChiTietSP_SPham.getSl() * Double.parseDouble(hoaDonChiTiet_ChiTietSP_SPham.getDonGia().toString());
//
//                }
//                txtTongTien.setText(new BigDecimal(tongTien) + "");
//                return;
//            }
//
//        }
//        if (hoadonct_ser.addHoaDonChiTiet(hdct)) {
//            loadGioHang(hoadonct_ser.getAllHoaDon_HoaDonChiTiet_ChiTietSP_theoMahd(maHD));
//        }
//        ArrayList<HoaDonChiTiet_ChiTietSP_SPham> li2 = hoadonct_ser.getAllHoaDon_HoaDonChiTiet_ChiTietSP_theoMahd(maHD);
//        double tongTien = 0;
//        for (HoaDonChiTiet_ChiTietSP_SPham hoaDonChiTiet_ChiTietSP_SPham : li2) {
//            tongTien += hoaDonChiTiet_ChiTietSP_SPham.getSl() * Double.parseDouble(hoaDonChiTiet_ChiTietSP_SPham.getDonGia().toString());
//
//        }

    }//GEN-LAST:event_tblBanHangMouseClicked

    public void loadDataToCBBDM() {
        this.CBBModelDM.removeAllElements();
        List<DanhMucModel> list = new ArrayList<>();
        try {
            list = this.dmsv.getAllDanhMuc();
            DanhMucModel dm = new DanhMucModel("", "ALL", 0);
            this.CBBModelDM.addElement(dm);
            for (DanhMucModel danhMuc : list) {
                this.CBBModelDM.addElement(danhMuc);
            }
        } catch (Exception ex) {
            Logger.getLogger(BanHangJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void changeBackgroud_SP_KH() {
        if (isSanPhamSelected == true) {
            btnSanpham.setBackground(new Color(153, 255, 153));

            txtTimKiemBH.setText("Tìm Kiếm Sản Phẩm");
        } else {
            btnKhBh.setBackground(new Color(255, 204, 102));

            txtTimKiemBH.setText("Tìm Kiếm Khách Hàng");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Khach;
    private javax.swing.JScrollPane Sanpham;
    private javax.swing.JButton btnKhBh;
    private javax.swing.JButton btnSanpham;
    private javax.swing.JButton btnTimKiemBH;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbbDanhMuc;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel jpanel;
    private javax.swing.JLabel lblhoadontrong;
    private javax.swing.JLabel lbltenkh;
    private javax.swing.JPanel pncardgoc;
    private javax.swing.JTable tblBanHang;
    private javax.swing.JTable tblGioHang;
    private javax.swing.JTable tblThongtinKH;
    private javax.swing.JTextField txtSLSP;
    private javax.swing.JTextField txtThanhTien;
    private javax.swing.JTextField txtTimKiemBH;
    // End of variables declaration//GEN-END:variables
// public boolean nhapSl() {
//        String sl = JOptionPane.showInputDialog("Nhập số lượng");
//        if (sl != null) {
//            try {
//                slNhap = Integer.parseInt(sl);
//                if (slNhap > slGoc) {
//                    JOptionPane.showMessageDialog(null, "Số lượng vượt quá số lượng hiện tại");
//                    return true;
//                } else if (slNhap <= 0) {
//                    JOptionPane.showMessageDialog(null, "Số lượng phải nhập ít nhất là 1");
//                    return true;
//                }
//                return false;
//            } catch (Exception e) {
//                JOptionPane.showMessageDialog(null, "Số lượng sai!");
//                return true;
//            }
//        } else {
//            slNhap = 0;
//            return true;
//        }
//    }
//
//    public int getSlNhap() {
//        return slNhap;
//    }
//
//    public void setSlNhap(int slNhap) {
//        this.slNhap = slNhap;
//    }
//
//    public int getSlGoc() {
//        return slGoc;
//    }
//
//    public void setSlGoc(int slGoc) {
//        this.slGoc = slGoc;
//    }
//
//    public void tongTien() {
//        double tongTien = 0;
//        double giamGia = 0;
//        int soLuong = 0;
//
//        for (int i = 0; i < tblGioHang.getRowCount(); i++) {
//            int sl = Integer.parseInt(tblGioHang.getValueAt(i, 2) + "");
//            double thanhTienColum = df.parse(tblGioHang.getValueAt(i, 7) + "", new ParsePosition(0)).doubleValue();
////            double giaChuaGiam = sl * Double.parseDouble(tblHoaDon.getValueAt(i, 5) + "");
//
//            tongTien += thanhTienColum;
////            giamGia += (giaChuaGiam - thanhTienColum);
//            soLuong += sl;
//        }
//
////        lblGiamGia.setText(df.format(giamGia));
//        txtSLSP.setText(soLuong + "");
//        txtThanhTien.setText(df.format(tongTien));
//        txtThanhTien.setToolTipText(tongTien + "");
//        txtThanhTien.setText(df.format(tongTien));
//        pnlTabs.setTitleAt(pnlTabs.getSelectedIndex(), lbltenkh.getText() + ": " + df.format(tongTien));
//    }
//
//    public void suaCTHD(SanPham idsp, int soLuongSP, int soLuongCTHD, BigDecimal giaBan) throws NumberFormatException {
//        ChiTietSanPhamModel sp = new ChiTietSanPhamModel();
//        sp.setIdSP(idsp);
//        sp.setSoLuong(soLuongSP);
//        HoaDonChiTiet cthd = new HoaDonChiTiet();
//        cthd.setIdHD((lblhoadontrong.getToolTipText()));
////        cthd.setIdCTSP();
////        cthd.setSoLuong(soLuongCTHD);
////        cthd.setDonGia(giaBan);
////        try {
////            CTSPService.updateCTSP(sp);
////            cthd.update(cthd);
////
////        } catch (Exception ex) {
////            Logger.getLogger(HoaDonFrm.class.getName()).log(Level.SEVERE, null, ex);
////        }
//    }
//        public void taoHoaDon() {
////        this.maxMaHD = this.DAOHD.getMaxMaHD();
////        HoaDon hd = new HoaDon();
////        hd.setMaHD(maxMaHD + 1);
////        hd.setMaNV(Auth.user.getMaNV());
////        hd.setMaTT(1);
////        if (!lblTenKH.getText().equalsIgnoreCase("Khách lẻ")) {
////            hd.setMaKH(lblTenKH.getToolTipText());
////        }
////        try {
////            this.DAOHD.insert(hd);
////            lblHoaDon.setText("Mã Hóa Đơn: " + (maxMaHD + 1));
////            lblHoaDon.setToolTipText(String.valueOf(maxMaHD + 1));
////        } catch (Exception ex) {
////            Logger.getLogger(HoaDonFrm.class.getName()).log(Level.SEVERE, null, ex);
//////        }
//    }
}
